;  ramtest - TheCart RAM tester
;
;  Copyright (C) 2005-2011 Matthias Reichl <hias@horus.com>
;
;  This program is free software; you can redistribute it and/or modify
;  it under the terms of the GNU General Public License as published by
;  the Free Software Foundation; either version 2 of the License, or
;  (at your option) any later version.
;
;  This program is distributed in the hope that it will be useful,
;  but WITHOUT ANY WARRANTY; without even the implied warranty of
;  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
;  GNU General Public License for more details.
;
;  You should have received a copy of the GNU General Public License
;  along with this program; if not, write to the Free Software
;  Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.

ENABLE_POKEYRND=1

	.include "cio.inc"
	.include "libflash.inc"
	.include "flash.inc"
	.include "flashdef.inc"
	.include "hisio.inc"

SIO	= $E459

	.BANK
	* = START

FLASHMAIN
	JSR INIT

MAINLP	BPUT0 TTITLE
	JSR FINIT
	JSR FENABLE
	JSR FDETECT
	JSR FDISABLE

	LDA FTYPE
	CMP #TNOFLSH
	BNE MAINFND

	BPUT0 TPRESS
	INC $42
	JSR GETCHAR
	TYA
	PHA
	JSR FINIT
	DEC $42

	PLA
	CMP #128
	BNE MAINLP

EXIT	JSR CLEANUP
	STA TC_LOCKCFG
	JMP ($A)

MAINFND
	LDA FTYPE
	JSR PFTYPE

MOK
; save current state
	FSAVESTATE STATEFLASH
; setup RAM mode
	LDA #TRAM512
;	LDA #TRAM128
	STA FTYPE
	JSR FSETCHP
	FSAVESTATE STATERAM

; keep in RAM state
;	JSR MODEFLASH

; setup variables for old (raw) flasher code
	FCOPY4 FSIZE,SIZE
	LDA #1
	STA NUMCHIP
	LDA #0
	STA NEEDERAS

; setup SIZEB
	JSR SETSIZEB

	BPUT0 TMENU
MENULP	JSR GETCHAR
	CPY #128
	BNE ?MENUL1
	JMP MAINLP
?MENUL1
	CMP #'Q
	BNE NOQ

	JSR PRSEL
	BPUT0 TASKQUIT
	JSR YESNO
	PHP
	LDA #155
	JSR PUTCHAR
	PLP

	BEQ ?DOEXIT
	JMP MAINLP
?DOEXIT
	JMP EXIT

MAINCONT
	BPUT0 TCONT
	JSR GETCHAR
	JMP MAINLP

NOQ
	CMP #'1		; program raw file
	BNE NO1

	JSR PRSEL
	LDA #MODEP
	STA MODE
	JSR DOCOMMON
	JMP MAINCONT

NO1
	CMP #'2		; verify raw file
	BNE NO2

	JSR PRSEL
	LDA #MODEV
	STA MODE
	JSR DOCOMMON
	JMP MAINCONT

NO2
	CMP #'3		; write to raw file
	BNE NO3

	JSR PRSEL
	LDA #MODED
	STA MODE
	JSR DOCOMMON
	JMP MAINCONT

NO3
	CMP #'4		; program random
	BNE NO4

	JSR PRSEL
	LDA #MODEP_RND
	STA MODE
	JSR DOCOMMON
	JMP MAINCONT

NO4
	CMP #'5		; verify random
	BNE NO5

	JSR PRSEL
	LDA #MODEV_RND
	STA MODE
	JSR DOCOMMON
	JMP MAINCONT

NO5
	JMP MENULP

; print "aborted" and return with C=1
RETABORT
	BPUT0 TABRT
	SEC
	RTS

; print menu selection
PRSEL	JSR PUTCHAR
	LDA #155
	JSR PUTCHAR
	LDA #155
	JMP PUTCHAR


INIT	LDA 106
	STA M106
	LDA 740
	STA M740
	LDA #$A0
	STA 106
	STA 740
	JSR GR0

	LDA $D301
	STA MD301
	ORA #2
	STA $D301
	RTS

CLEANUP	LDA MD301
	STA $D301
	LDA M106
	STA 106
	LDA M740
	STA 740
	JMP GR0

M106	.BYTE 0
M740	.BYTE 0
MD301	.BYTE 0


	.include "flashio.src"
	.include "flashutil.src"
;	.include "flashincr.src"
	.include "flashraw.src"
	.include "ramtext.src"
	.include "pokeyrnd.src"

	.include "libflash.src"
	.include "cio.src"
	.include "iohelp.src"
	.include "iohelpfl.src"
	.include "numhelp.src"

;	.include "flashtest.src"

	.include "flashdata.src"
	.include "libflash-ramloc.src"

.if .not .def FLASH_BIN
	.BANK
	* = $2E0
	.WORD START
.endif

