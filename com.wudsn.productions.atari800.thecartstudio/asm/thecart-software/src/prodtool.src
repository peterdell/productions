;  prodtool - flash whole cartridge from a second cart
;
;  a special adapter is needed, setting PA7=high enables the
;  destination cart, setting PA7=low the source cart.
;
;  Copyright (C) 2013-2014 Matthias Reichl <hias@horus.com>
;
;  This program is free software; you can redistribute it and/or modify
;  it under the terms of the GNU General Public License as published by
;  the Free Software Foundation; either version 2 of the License, or
;  (at your option) any later version.
;
;  This program is distributed in the hope that it will be useful,
;  but WITHOUT ANY WARRANTY; without even the implied warranty of
;  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
;  GNU General Public License for more details.
;
;  You should have received a copy of the GNU General Public License
;  along with this program; if not, write to the Free Software
;  Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.

	.include "cio.inc"
	.include "libflash.inc"
	.include "flash.inc"
	.include "flashdef.inc"

SPIVEC = DATAVEC

; Hias: testing
;DUMMY=1
;NORAMTEST=1
RAMTYPE=TRAM512
;RAMTYPE=TRAM128
;LIMITSIZE=$8	; 512k
;LIMITSIZE=$40	; 4MB


;************************************
; ATR file header
;************************************

	* = START-16

        .WORD $0296 ; magic
        .WORD (END-START+15)/16
        .WORD 128
        .WORD 0,0,0,0,0

; boot header complete file

        .BYTE 0

        .BYTE (END-START+127)/128

        .WORD START
        .WORD XRTS

	JMP FLASHMAIN

XRTS	RTS

MYDL	.BYTE 112,112,112
	.BYTE $47
	.WORD MYSCR
	.BYTE $41
	.WORD MYDL

MYSCR	.DC 16 0
SCRBANK	= MYSCR+11

;               1234567890123456
;STERASE	.SBYTE "ERASE FLASH     "
STPROG	.SBYTE "PROGRAM         "
STVERI	.SBYTE "VERIFY          "

	.macro PSCR ; text
	LDX #15
PSCRLP	LDA %1,X
	STA MYSCR,X
	DEX
	BPL PSCRLP
	.endm

; print bank on MYSCR
PMYBANK
; disable atract mode
	LDA #0
	STA 77

	FCOPY4 FLASHADR ADRTMP
	JSR ADR2BNK
	LDA ADRTMP
	STA NUMBIN
	LDA ADRTMP+1
	STA NUMBIN+1
	LDA #0
	STA NUMMOD
	JSR ITOA

	LDX #0
PMYBANK1
; change (max) first 4 "0" into space
	LDA NUMASC,X
	CMP #'0
	BNE PMYBANK2
	LDA #0
	STA SCRBANK,X
	INX
	CPX #4
	BNE PMYBANK1

PMYBANK2
	LDA NUMASC,X
	SEC
	SBC #32
	STA SCRBANK,X
	INX
	CPX #5
	BNE PMYBANK2
	RTS

SETMYSCR
	LDA #<MYDL
	STA 560
	LDA #>MYDL
	STA 561
	LDA #33
	STA 559

W20	LDA 20
W20L	CMP 20
	BEQ W20L
	RTS

SETORIGSCR
	LDA M560
	STA 560
	LDA M560+1
	STA 561
	LDA #34
	STA 559
	JMP W20

FLASHMAIN
	JSR INIT

	BPUT0 TTITLE
;	JSR FINIT
	JSR CS_INIT
	JSR CS_SRC
	JSR FENABLE
	JSR FDETECT
	JSR FDISABLE

	BPUT0 TMASTER
	LDA FTYPE
	STA TYPE_MASTER
	JSR PFTYPE

	JSR CS_DEST
	JSR FENABLE
	JSR FDETECT
	JSR FDISABLE

	BPUT0 TDESTC

	LDA FTYPE
	JSR PFTYPE
	LDA FTYPE
	CMP #TNOFLSH
	BNE MOK

ELOOP	LDA #0
	STA 77
	JMP ELOOP

MOK	LDA FTYPE
	CMP TYPE_MASTER
	BEQ MOK1

	BPUT0 TWRMASTER
	JMP ELOOP

MOK1
	LDA #155
	JSR PUTCHAR

; save current state
	FSAVESTATE STATEFLASH

; remember flash size
	FCOPY4 FSIZE,SIZE

; setup RAM mode
	LDA #RAMTYPE
	STA FTYPE
	JSR FSETCHP
	FSAVESTATE STATERAM

; remember ram size
	FCOPY4 FSIZE,RAMSIZE

; restore flash state
	JSR MODEFLASH

.if .def LIMITSIZE
; Hias: limit flash size to LIMITSIZE*64k for testing
	LDA #0
	STA SIZE
	STA SIZE+1
	STA SIZE+3
	LDA #LIMITSIZE
	STA SIZE+2
.endif

	JSR SETDATABUF

	JSR PRODWRRAM
	BPL ?PWRRAMOK
	JMP ELOOP

?PWRRAMOK
	JSR PRODREADEE
	BPL ?PRDEEOK
	JMP ELOOP

?PRDEEOK
	JSR PRODPROGEE
	BPL ?PWREEOK
	JMP ELOOP

?PWREEOK
	JSR PRODVERIEE
	BPL ?PVFEEOK
	JMP ELOOP

?PVFEEOK
	JSR PRODERASE
	BPL ?PERASOK
	JMP ELOOP

?PERASOK
	JSR SETMYSCR

	JSR PRODFLASH
	BPL ?PFLASHOK
	JMP ELOOP

?PFLASHOK
	JSR PRODVERIFY
	BPL ?PVERIFYOK
	JMP ELOOP

?PVERIFYOK
	JSR SETORIGSCR

	JSR PRODVFRAM
	BPL ?PVFRAMOK
	JMP ELOOP

?PVFRAMOK
	BPUT0 TFINI
	JMP ELOOP

.if .def CARTSWITCH_D406
	.include "cartswitch-d406.src"
.else
	.include "cartswitch.src"
.endif
	.include "flashutil.src"
	.include "prodtext.src"

	.include "libflash.src"
	.include "cio.src"
DUNIT   = $0301

	.include "iohelp.src"
	.include "iohelpfl.src"
	.include "numhelp.src"

RAMERROR
FLASHERROR
	JSR PERRADR
	JSR PERRTYP
	JSR SETORIGSCR
	LDY #$FF
	RTS

EEPROMERROR
	JSR PERRADR
	LDY #$FF
	RTS

READ8K
	JSR FENABLE
	LDX #32
	JSR FRPAGE
	JSR FDISABLE
	RTS

PROG8K
.if .def DUMMY
	CLC
	LDA 20
	ADC #10
?W20PR	CMP 20
	BNE ?W20PR
	LDY #0
.else
	JSR FENABLE
	LDX #32
	JSR FWPAGE
	PHP
	JSR FDISABLE
	PLP
.endif
	RTS

PROG8KRAM
	JSR FENABLE
	LDX #32
	JSR FWPAGE
	PHP
	JSR FDISABLE
	PLP
	RTS

VERIFY8K
	JSR FENABLE
	LDX #32
	JSR FCPAGE
	PHP
	JSR FDISABLE
	PLP
	RTS

GETRND8K
	LDA #<DATABUF
	STA DATAVEC
	LDA #>DATABUF
	STA DATAVEC+1
	FCOPY4 FLASHADR ADRTMP
	JSR ADR2BNK
	LDA ADRTMP
	TAY
	AND #$0F
	TAX
	JSR RND8K
	LDY #0
	RTS
	
PRODWRRAM
	JSR MODERAM

	BPUT0 TPROGR
	JSR FADRZERO

PROGRAMLP
	JSR GETRND8K

	JSR PROG8KRAM
	BPL PROGROK
	JMP RAMERROR
PROGROK
	CLC
	LDA FLASHADR+1
	ADC #$20
	STA FLASHADR+1
	BCC PROGR1
	INC FLASHADR+2
	BNE PROGR1
	INC FLASHADR+3

PROGR1
	CMP4 FLASHADR RAMSIZE
	BEQ PROGRAMEND
	JMP PROGRAMLP

PROGRAMEND
	JSR MODEFLASH
	LDY #0
	RTS

PRODVFRAM
	JSR MODERAM

	BPUT0 TVERIR
	JSR FADRZERO

VERIRAMLP
	JSR GETRND8K

	JSR VERIFY8K
	BPL VERIROK
	JMP RAMERROR
VERIROK
	CLC
	LDA FLASHADR+1
	ADC #$20
	STA FLASHADR+1
	BCC VERIR1
	INC FLASHADR+2
	BNE VERIR1
	INC FLASHADR+3

VERIR1
	CMP4 FLASHADR RAMSIZE
	BEQ VERIRAMEND
	JMP VERIRAMLP

VERIRAMEND
	JSR MODEFLASH
	LDY #0
	RTS

PRODREADEE
	BPUT0 TREADE
	JSR CS_SRC
	LDA #0
	STA SPIVEC
	LDA #>SPIBUF
	STA SPIVEC+1
READEELP
	LDY SPIVEC
	LDX #16
	JSR SPI_READ_DATA
	BCC READEEOK1
	JSR CS_DEST
	JSR PERROR
	LDY #$FF
	RTS
READEEOK1
	CLC
	LDA SPIVEC
	ADC #$10
	STA SPIVEC
	BCC READEELP
	JSR CS_DEST
	LDY #0
	RTS

PRODPROGEE
	BPUT0 TPROGE
	LDA #0
	STA SPIVEC
	LDA #>SPIBUF
	STA SPIVEC+1
PROGEELP
	LDY SPIVEC
	LDX #16
	JSR SPI_WRITE_DATA
	BCC PROGEEOK1
	JSR PERROR
	LDY #$FF
	RTS
PROGEEOK1
	CLC
	LDA SPIVEC
	ADC #$10
	STA SPIVEC
	BCC PROGEELP
	LDY #0
	RTS

PRODVERIEE
	BPUT0 TVERIE
	LDA #0
	STA SPIVEC
	LDA #>SPIBUF2
	STA SPIVEC+1
VERIEELP1
	LDY SPIVEC
	LDX #16
	JSR SPI_READ_DATA
	BCC VERIEEOK1
	JSR PERROR
	LDY #$FF
	RTS
VERIEEOK1
	CLC
	LDA SPIVEC
	ADC #$10
	STA SPIVEC
	BCC VERIEELP1
	LDY #0
VERIEELP2
	LDA SPIBUF,Y
	CMP SPIBUF2,Y
	BNE VERIEEERR
	INY
	BNE VERIEELP2
	LDY #0
	RTS
VERIEEERR
; setup data for PERRADR
	STA FERRUD
	LDA SPIBUF2,Y
	STA FERRFD
	STY FLASHADI
	LDA #0
	STA FLASHADI+1
	STA FLASHADI+2
	STA FLASHADI+3
	LDA #EFLDVE
	STA FERROR
	JSR PERRADR
	JSR PERRTYP
	LDY #$FF
	RTS


PRODERASE
	BPUT0 TERAS
;	PSCR STERASE

	JSR FADRZERO
	JSR CS_DEST

	JSR FENABLE
.if .def DUMMY
	CLC
	LDA 20
	ADC #50
?W20ERA	CMP 20
	BNE ?W20ERA
	LDY #0
.else
	JSR FCERAS
.endif
	PHP
	JSR FDISABLE
	PLP
	BMI ?ERASERR
	RTS
?ERASERR
	JSR PERROR
	LDY #$FF
	RTS

PRODFLASH
	BPUT0 TPROGF
	PSCR STPROG
	JSR FADRZERO

PROGLP	
	JSR PMYBANK

	JSR CS_SRC
	JSR READ8K
	JSR CS_DEST

NPRGRAM	JSR PROG8K
	BPL PROGFOK
	JMP FLASHERROR

PROGFOK
	CLC
	LDA FLASHADR+1
	ADC #$20
	STA FLASHADR+1
	BCC PROGA1
	INC FLASHADR+2
	BNE PROGA1
	INC FLASHADR+3

PROGA1
	CMP4 FLASHADR SIZE
	BEQ PROGEND
	JMP PROGLP

PROGEND	LDY #0
	RTS

PRODVERIFY
	BPUT0 TVERIF
	PSCR STVERI
	JSR FADRZERO

VERILP	JSR PMYBANK

	JSR CS_SRC
	JSR READ8K
	JSR CS_DEST

NVERRAM	JSR VERIFY8K
	BPL VERIOK
	JMP FLASHERROR

VERIOK
	CLC
	LDA FLASHADR+1
	ADC #$20
	STA FLASHADR+1
	BCC VERIA1
	INC FLASHADR+2
	BNE VERIA1
	INC FLASHADR+3

VERIA1	CMP4 FLASHADR SIZE
	BEQ VERIEND
	JMP VERILP

VERIEND	LDY #0
	RTS


INIT	LDA 106
	STA M106
	LDA 740
	STA M740
	LDA #$A0
	STA 106
	STA 740
	JSR GR0

	LDA 560
	STA M560
	LDA 561
	STA M560+1

	LDA $D301
	STA MD301
	ORA #2
	STA $D301
	RTS

CLEANUP	LDA MD301
	STA $D301
	LDA M106
	STA 106
	LDA M740
	STA 740
	JMP GR0

M106	.BYTE 0
M560	.WORD 0
M740	.BYTE 0
MD301	.BYTE 0

TYPE_MASTER	.BYTE 0

SPITMP		.BYTE 0
SPICOUNT	.BYTE 0
SPIADR		.BYTE 0
SPIMAXTIME	.BYTE 0

;	.include "flashtest.src"

	.include "flashdata.src"
	.include "spi.src"
	.include "pokeyrnd.src"
	.include "libflash-ramloc.src"

        .IF (*&127)<>0
        .DC (128-(*&127)) 0
        .ENDIF

	SPIBUF = (*+255) & $ff00
	SPIBUF2 = (*+511) & $ff00

END     = *

