mads 2.0.6 build 58 (28 Jan 17)
Source: C:\jac\system\Java\Programming\Workspaces\Productions\com.wudsn.productions.atari800.thecartstudio\asm\atarimax\new\MaxflashMenu.asm
     1
     2 = 0028			screen_width	= $28
     3 = 0018			screen_lines	= $18
     4
     5 = 0017			status_line	= $17
     6
     7 = 2000			banksize	= $2000
     8
     9 				; System equates
    10 				; 
    11 				; DISPLAY LIST EQUATES
    12 				; 
    13 = 0080			adli	= $80
    14 = 0040			alms	= $40
    15 = 0000			aempty1	= $00
    16 = 0070			aempty8	= $70
    17 				; 
    18 				; OS VARIABLES FOR XL/XE
    19 = 0008			warmst	= $08
    20 = 0009			boot	= $09
    21 = 0010			pokmsk	= $10
    22 = 0042			critic	= $42
    23
    24 = 000C			old_vdslst	= $0c	;Backup for DLI handler
    25 = 000E			cursor_ptr	= $0e
    26 = 0015			bufadr		= $15
    27 = 0017			iccomt		= $17
    28 = 0018			dskfms		= $18
    29 = 0019			menu_key	= $19
    30 = 001A			dskutl		= $1a
    31 = 001C			abufpt		= $1c
    32 = 0020			ichidz		= $20
    33 = 0021			entry_type	= $21
    34 = 0022			iccomz		= $22
    35 = 0023			icstaz		= $23
    36 = 0024			icbalz		= $24
    37 = 0025			icbahz		= $25
    38
    39 = 002D			icax4z		= $2d		;Used for empty display list, $41
    40 = 002E			icax5z		= $2e		;Used for empty display list, $2d
    41 = 002F			icax6z		= $2f		;Used for empty display list, $00
    42
    43 = 0038			p1	= $38
    44 = 003A			p2	= $3a
    45
    46
    47 				; 
    48 				; PAGE 2
    49 				; 
    50 = 0200			vdslst	= $0200
    51
    52 = 022F			sdmctl	= $022f
    53 = 0230			sdlstl	= $0230
    54 = 0231			sdlsth	= $0231
    55
    56 = 0244			coldst	= $0244
    57
    58 = 02C0			pcolr0	= $02c0
    59 = 02C1			pcolr1	= $02c1
    60 = 02C2			pcolr2	= $02c2
    61 = 02C3			pcolr3	= $02c3
    62 = 02C4			color0	= $02c4
    63 = 02C5			color1	= $02c5
    64 = 02C6			color2	= $02c6
    65 = 02C7			color3	= $02c7
    66 = 02E0			runad	= $02e0
    67 = 02E2			initad	= $02e2
    68 = 02E4			ramsiz	= $02e4
    69 = 02F3			chact	= $02f3
    70 = 02F4			chbas	= $02f4
    71 = 02FC			ch	= $02fc
    72 				; 
    73 				; PAGE 3
    74 				; 
    75 = 0340			iocb0	= $0340
    76 = 03F8			basicf	= $03f8
    77 = 03FA			gintlk	= $03fa
    78
    79
    80 				; 
    81 				; HARDWARE REGISTERS
    82 				; 
    83 				; GTIA
    84 				; 
    85 = D010			trig0	= $d010
    86 = D011			trig1	= $d011
    87 = D013			trig3	= $d013
    88 = D017			colpf1	= $d017
    89 = D018			colpf2	= $d018
    90 = D01A			colbk	= $d01a
    91 = D01F			consol	= $d01f
    92
    93 				; 
    94 				; POKEY
    95 				; 
    96 = D200			audf0	= $d200
    97 = D201			audc0	= $d201
    98 = D205			audc2	= $d205
    99 = D207			audc3	= $d207
   100 = D208			audctl	= $d208
   101
   102 = D20A			random	= $d20a
   103 = D20D			serout	= $d20d
   104 = D20E			irqen	= $d20e
   105 = D20F			skstat	= $d20f
   106 				; 
   107 				; PIA
   108 				; 
   109 = D300			porta	= $d300
   110 = D301			portb	= $d301
   111 = D302			pactl	= $d302
   112 = D303			pbctl	= $d303
   113 				; 
   114 				; ANTIC
   115 				; 
   116 = D400			dmaclt	= $d400
   117 = D401			chactl	= $d401
   118 = D402			dlistl	= $d402
   119 = D403			dlisth	= $d403
   120 = D409			chbase	= $d409
   121 = D40A			wsync	= $d40a
   122 = D40B			vcount	= $d40b
   123 = D40E			nmien	= $d40e
   124
   125 				; 
   126 				; ROM VECTORS
   127 				; 
   128 = E456			ciov	= $e456
   129 = E474			warmsv	= $e474
   130 = E477			coldsv	= $e477
   131
   132 				;
   133 				; Code equates
   134 				;
   135 = 1000			code_ram = $1000
   136 = 1C00			dl_rbam	 = $1c00
   137 = 1C22			sm_ram	 = $1c22
   138
   139 = A000			la000	= $a000
   140 = C000			lc000	= $c000
   141 = D000			ld000	= $d000
   142 = D500			ld500	= $d500
   143 = E000			le000	= $e000
   144 = E459			siov	= $e459	;SIO jump address
   145
   146 					.local os
   147 = C100			lc100	= $c100
   148 = C256			lc256	= $c256
   149 = C2D1			lc2d1	= $c2d1
   150 = C2D2			lc2d2	= $c2d2
   151 = C2D3			lc2d3	= $c2d3
   152 = C2D4			lc2d4	= $c2d4
   153 = C2D6			lc2d6	= $c2d6
   154 = C2D7			lc2d7	= $c2d7
   155 = C2D8			lc2d8	= $c2d8
   156 = C2D9			lc2d9	= $c2d9
   157 = C2E0			lc2e0	= $c2e0
   158 = C2E1			lc2e1	= $c2e1
   159 = C2E6			lc2e6	= $c2e6
   160 = C2EA			lc2ea	= $c2ea
   161 = C2F6			lc2f6	= $c2f6
   162 = C30B			lc30b	= $c30b
   163 = C410			lc410	= $c410
   164 = C448			lc448	= $c448		;"E:",$9b
   165 = C485			lc485	= $c485
   166 = C486			lc486	= $c486
   167 = C487			lc487	= $c487
   168 = C4A1			lc4a1	= $c4a1
   169 = C4AF			lc4af	= $c4af
   170 = C4B2			lc4b2	= $c4b2
   171 = F104			lf104	= $f104
   172 = F257			lf257	= $f257		;LDA #nn
   173 = F259			lf259	= $f259		;STA $06/unpacker.bank_number
   174 = F25B			lf25b	= $f25b		;RTS
   175 = FFDC			lffdc	= $ffdc		;JSR lc256
   176 					.endl		;End of OS
   177
   178
   179 				;
   180 				; Start of code
   181 				;
   182 					opt h-r-
   183
   184 					org $a000
   185 				;
   186 					.local chr
   187 A000 00 00 00 00 00 00 + 	ins "MaxflashMenu.chr"
   188 					.endl
   189
   190 A400				.local options
   191 A400 00			colors		.byte $00
   192 A401 80			cheese		.byte $80
   193 A402 00			reverse		.byte $00
   194 A403 00			runfirst	.byte $00	;$00 or $80+number of autostart entry number
   195 A404 00			fastkeys	.byte $00
   196 A405 00			anticoff	.byte $00
   197 A406 80			cartoff		.byte $80
   198 A407 60 91 6F		textcolors	.byte $60,$91,$6f
   199 A40A 00			osbank		.byte $00
   200 A40B 00			xlosbank	.byte $00
   201 A40C 00			mathpackbnk	.byte $00
   202 A40D A0			mathpackpag	.byte $a0
   203 A40E 08			mathpacksiz	.byte $08
   204 A40F A8			osbdiskpag	.byte $a8
   205 A410 02			osbdisksiz	.byte $02
   206 A411 00			cheeseopts	.byte $00
   207 A412 00			stick2off	.byte $00
   208 					.endl
   209
   210 A413				.proc start
   211 A413 AD 01 D3			lda portb
   212 A416 09 42			ora #$42
   213 A418 8D 01 D3			sta portb
   214 A41B 29 01			and #$01
   215 A41D D0 17			bne os_not_in_ram
   216 A41F 20 85 AA			jsr initialize_system
   217 A422 20 F1 AE			jsr copy_dl_to_ram
   218
   219 A425 AD 00 E0			lda le000
   220 A428 85 20			sta ichidz
   221 A42A A2 00			ldx #$00
   222 A42C 8E 00 E0			stx le000
   223 A42F C9 FF			cmp #$ff
   224 A431 F0 03			beq no_autostart_active
   225 A433 4C 5D A4			jmp autostart_entry
   226
   227 A436			os_not_in_ram
   228 A436			no_autostart_active
   229 A436 20 D6 A6			jsr check_option_pressed
   230 A439 F0 25			beq no_menu
   231
   232 A43B 20 85 AA			jsr initialize_system
   233 A43E AD 03 A4			lda options.runfirst
   234 A441 10 09			bpl no_autostart_defined
   235 A443 29 7F			and #$7f
   236
   237 A445			the_cart_start_address		;IN: <A>=entry number (1..127)
   238 A445 20 61 A4			jsr get_from_menumap
   239 A448 85 20			sta ichidz
   240 A44A D0 11			bne autostart_entry
   241
   242 A44C			no_autostart_defined
   243 A44C 20 F1 AE			jsr copy_dl_to_ram
   244 A44F 20 C1 AF			jsr dli.setup_dli
   245 A452 20 20 AC			jsr select_entry_lac20
   246 A455 85 20			sta ichidz
   247 A457 20 67 A4			jsr flash_line_la467
   248 A45A 20 A9 AF			jsr dli.shutdown_dli
   249
   250 A45D			autostart_entry
   251 A45D 4C 4B A7			jmp start_menu_entry
   252
   253 A460 60			no_menu	rts
   254 					.endp
   255
   256 A461				.proc get_from_menumap	;IN: <A>=entry number (1..127), OUT: <A>=entry bank
   257 A461 AA				tax
   258 A462 CA				dex
   259 A463 BD 3F BD			lda menu_entries.menumap,x
   260 A466 60				rts
   261 					.endp
   262
   263 A467				.proc flash_line_la467
   264 A467 2C 01 A4			bit options.cheese
   265 A46A 10 09			bpl skip
   266 A46C A5 19			lda menu_key
   267 A46E C9 05			cmp #$05
   268 A470 F0 03			beq skip
   269 A472 20 08 AE			jsr select_entry_lac20.lada1.flash_line
   270 A475 60			skip	rts
   271 					.endp
   272
   273 A476				.proc copy_page_to_l1000_and_run	;IN: <X>=lo, <Y>=hi
   274 A476 86 38			stx p1
   275 A478 84 39			sty p1+1
   276 A47A A9 00			lda #<code_ram
   277 A47C 85 3A			sta p2
   278 A47E A9 10			lda #>code_ram
   279 A480 85 3B			sta p2+1
   280 A482 A0 00			ldy #$00
   281 A484 B1 38		la484	lda (p1),y
   282 A486 91 3A			sta (p2),y
   283 A488 C8				iny
   284 A489 D0 F9			bne la484
   285 A48B 4C 00 10			jmp code_ram
   286 					.endp
   287
   288 A48E				.proc run_coldstart
   289 A48E A2 95			ldx #<run_coldstart_from_ram
   290 A490 A0 A4			ldy #>run_coldstart_from_ram
   291 A492 4C 76 A4			jmp copy_page_to_l1000_and_run
   292
   293 A495				.proc run_coldstart_from_ram
   294 A495 A9 00			lda #$00
   295 A497 8D 0E D4			sta nmien
   296 A49A 8D 0E D2			sta irqen
   297
   298 A49D 78				sei
   299 A49E 8D 0A D4			sta wsync
   300 A4A1 8D 00 D5			sta ld500
   301 A4A4 4C 77 E4			jmp coldsv
   302 					.endp
   303
   304 					.endp
   305
   306 A4A7				.proc os_handler
   307 A4A7				.proc copy_os_to_ram
   308 A4A7 AD 01 D3			lda portb
   309 A4AA 09 02			ora #$02
   310 A4AC 8D 01 D3			sta portb
   311 A4AF 78				sei
   312 A4B0 A9 00			lda #$00
   313 A4B2 8D 0E D4			sta nmien
   314 A4B5 AD 01 D3			lda portb
   315 A4B8 29 FE			and #$fe
   316 A4BA 8D 01 D3			sta portb
   317 A4BD 8D 0A D4			sta wsync
   318 A4C0 8D 00 D5			sta ld500
   319 A4C3 AE 0B A4			ldx options.xlosbank
   320 A4C6 9D 00 D5			sta ld500,x
   321 A4C9 A9 00 85 38 A9 A0 + 	mwa #la000 p1
   322 A4D1 A9 00 85 3A A9 C0 + 	mwa #lc000 p2
   323 A4D9 A2 40			ldx #$40
   324 A4DB			page_loop
   325 A4DB A0 00			ldy #$00
   326 A4DD			byte_loop
   327 A4DD B1 38			lda (p1),y
   328 A4DF 91 3A			sta (p2),y
   329 A4E1 C8				iny
   330 A4E2 D0 F9			bne byte_loop
   331 A4E4 E6 39			inc p1+1
   332 A4E6 E6 3B			inc p2+1
   333 A4E8 A5 3B			lda p2+1
   334 A4EA C9 D0			cmp #>ld000
   335 A4EC D0 13			bne skip_d0
   336 A4EE 18				clc
   337 A4EF A5 39			lda p1+1
   338 A4F1 69 08			adc #$08
   339 A4F3 85 39			sta p1+1
   340 A4F5 38				sec
   341 A4F6 8A				txa
   342 A4F7 E9 08			sbc #$08
   343 A4F9 AA				tax
   344 A4FA 18				clc
   345 A4FB A5 3B			lda p2+1
   346 A4FD 69 08			adc #$08
   347 A4FF 85 3B			sta p2+1
   348 A501 C9 E0		skip_d0	cmp #>le000
   349 A503 D0 12			bne skip_e0
   350 A505 8D 00 D5			sta ld500
   351 A508 AC 0B A4			ldy options.xlosbank
   352 A50B C8				iny
   353 A50C 99 00 D5			sta ld500,y
   354 A50F A9 00 85 38 A9 A0 + 	mwa #la000 p1
   355 A517 CA			skip_e0	dex
   356 A518 D0 C1			bne page_loop
   357 A51A 8D 00 D5			sta ld500
   358 A51D 60				rts
   359 					.endp
   360
   361 A51E				.proc set_os_c4af
   362 A51E A9 A0			lda #>la000
   363 A520 8D AF C4			sta os.lc4af
   364 A523 60				rts
   365 					.endp
   366
   367 A524				.proc patch_os
   368 A524 A9 EA			lda #$ea
   369 A526 8D 0B C3 8D 0C C3 + :28	sta os.lc30b+#
   370 A57A 8D 87 C4 8D 88 C4 + :8	sta os.lc487+#
   371 A592 8D A1 C4 8D A2 C4 + :8	sta os.lc4a1+#
   372
   373 A5AA A9 1D			lda #$1d
   374 A5AC 8D 85 C4			sta os.lc485
   375 A5AF A9 C5			lda #$c5
   376 A5B1 8D 86 C4			sta os.lc486
   377 A5B4 A9 C0			lda #$c0
   378 A5B6 8D AF C4			sta os.lc4af
   379 A5B9 A9 60			lda #$60
   380 A5BB 8D B2 C4			sta os.lc4b2
   381 A5BE A9 EA			lda #$ea
   382 A5C0 8D 10 C4 8D 11 C4 + :3	sta os.lc410+#
   383 A5C9 60				rts
   384 					.endp
   385
   386 A5CA				.proc la5ca
   387 A5CA 78				sei
   388 A5CB A9 00			lda #$00
   389 A5CD 8D 0E D4			sta nmien
   390 A5D0 AD 01 D3			lda portb
   391 A5D3 29 FE			and #$fe
   392 A5D5 09 02			ora #$02
   393 A5D7 8D 01 D3			sta portb
   394 A5DA 8D 00 D5			sta ld500
   395 A5DD A9 00			lda #$00
   396 A5DF 85 38			sta p1
   397 A5E1 AD 0D A4			lda options.mathpackpag
   398 A5E4 85 39			sta p1+1
   399 A5E6 A9 00			lda #$00
   400 A5E8 85 3A			sta p2
   401 A5EA A9 D8			lda #$d8
   402 A5EC 85 3B			sta p2+1
   403 A5EE AE 0E A4			ldx options.mathpacksiz
   404 A5F1 AC 0C A4			ldy options.mathpackbnk
   405 A5F4 99 00 D5			sta ld500,y
   406 A5F7 A0 00			ldy #$00
   407 A5F9 B1 38		loop1	lda (p1),y
   408 A5FB 91 3A			sta (p2),y
   409 A5FD C8				iny
   410 A5FE D0 F9			bne loop1
   411 A600 E6 39			inc p1+1
   412 A602 E6 3B			inc p2+1
   413 A604 CA				dex
   414 A605 D0 F2			bne loop1
   415 A607 8D 00 D5			sta ld500
   416
   417 A60A A9 00			lda #$00
   418 A60C 85 38			sta p1
   419 A60E AD 0F A4			lda options.osbdiskpag
   420 A611 85 39			sta p1+1
   421
   422 A613 A9 00			lda #<os.lc100
   423 A615 85 3A			sta p2
   424 A617 A9 C1			lda #>os.lc100
   425 A619 85 3B			sta p2+1
   426 A61B AE 10 A4			ldx options.osbdisksiz
   427 A61E AC 0C A4			ldy options.mathpackbnk
   428 A621 99 00 D5			sta ld500,y
   429 A624 A0 00			ldy #$00
   430 A626 B1 38		loop2	lda (p1),y
   431 A628 91 3A			sta (p2),y
   432 A62A C8				iny
   433 A62B D0 F9			bne loop2
   434 A62D E6 39			inc p1+1
   435 A62F E6 3B			inc p2+1
   436 A631 CA				dex
   437 A632 D0 F2			bne loop2
   438 					
   439 A634				.proc copy_os
   440 A634 8D 00 D5			sta ld500
   441 A637 AE 0A A4			ldx options.osbank
   442 A63A 9D 00 D5			sta ld500,x
   443 A63D A9 00			lda #<la000
   444 A63F 85 38			sta p1
   445 A641 A9 A0			lda #>la000
   446 A643 85 39			sta p1+1
   447 A645 A9 00			lda #<le000
   448 A647 85 3A			sta p2
   449 A649 A9 E0			lda #>le000
   450 A64B 85 3B			sta p2+1
   451 A64D A2 20			ldx #$20
   452 A64F A0 00			ldy #$00
   453 A651 B1 38		loop	lda (p1),y
   454 A653 91 3A			sta (p2),y
   455 A655 C8				iny
   456 A656 D0 F9			bne loop
   457 A658 E6 39			inc p1+1
   458 A65A E6 3B			inc p2+1
   459 A65C CA				dex
   460 A65D D0 F2			bne loop
   461 					.endp
   462
   463 A65F 8D 00 D5			sta ld500
   464 A662 60				rts
   465 					.endp
   466
   467 A663				.proc disable_os_rom
   468 = 0018				os_ram_flag = dskfms
   469
   470 A663 AD 01 D3			lda portb
   471 A666 29 01			and #$01
   472 A668 D0 01			bne la66b
   473 A66A 60				rts
   474
   475 A66B 78			la66b	sei
   476 A66C A9 00			lda #$00
   477 A66E 85 18			sta os_ram_flag
   478 A670 8D 0E D4			sta nmien
   479 A673 8D 0A D4			sta wsync
   480 A676 AD 01 D3			lda portb
   481 A679 48				pha
   482 A67A 29 FE			and #$fe
   483 A67C 8D 01 D3			sta portb
   484 A67F AD 00 C0			lda lc000
   485 A682 EE 00 C0			inc lc000
   486 A685 CD 00 C0			cmp lc000
   487 A688 F0 05			beq os_not_ram
   488 A68A CE 00 C0			dec lc000
   489 A68D E6 18			inc os_ram_flag
   490 A68F			os_not_ram
   491 A68F 68				pla
   492 A690 8D 01 D3			sta portb
   493 A693 A9 40			lda #$40
   494 A695 8D 0E D4			sta nmien
   495 A698 58				cli
   496 A699 A5 18			lda os_ram_flag
   497 A69B F0 01			beq print_64k_required
   498 A69D 60				rts
   499
   500 A69E				.proc print_64k_required
   501 A69E 20 F1 AE			jsr copy_dl_to_ram
   502 A6A1 20 34 B0			jsr screen.clear_screen
   503 A6A4 A2 00			ldx #$00
   504 A6A6 A0 02			ldy #$02
   505 A6A8 20 A4 B0			jsr screen.set_cursor
   506 A6AB A9 B5			lda #<message
   507 A6AD A0 A6			ldy #>message
   508 A6AF 20 02 B0			jsr screen.print_line
   509 A6B2 4C B2 A6		stop	jmp stop
   510
   511 A6B5				.local message
   512 A6B5 54 68 69 73 20 73 + 	.byte 'This selection requires 64k RAM!',$9B
   513 					.endl
   514 					.endp
   515
   516
   517 					.endp
   518
   519 					.endp
   520 					
   521 A6D6				.proc check_option_pressed	;OUT: <Z>=0/1
   522 A6D6 AD 1F D0			lda consol
   523 A6D9 2C 02 A4			bit options.reverse
   524 A6DC 10 02			bpl skip
   525 A6DE 49 04			eor #$04
   526 A6E0 29 04		skip	and #$04
   527 A6E2 60				rts
   528 					.endp
   529
   530 A6E3				.proc compute_index_on_bindata	;IN: ichidz = entry number, OUT: <A> = entry type
   531 A6E3 A0 00			ldy #$00
   532 A6E5 A6 20			ldx ichidz
   533 A6E7 CA				dex
   534 A6E8 8A				txa
   535 A6E9 85 3A			sta p2
   536 A6EB 84 3B			sty p2+1
   537 A6ED 06 3A			asl p2
   538 A6EF 26 3B			rol p2+1
   539 A6F1 06 3A			asl p2
   540 A6F3 26 3B			rol p2+1
   541 A6F5 06 3A			asl p2
   542 A6F7 26 3B			rol p2+1
   543 A6F9 18				clc
   544 A6FA A9 3F			lda #<menu_entries.bindata
   545 A6FC 65 3A			adc p2
   546 A6FE 85 38			sta p1
   547 A700 A9 B9			lda #>menu_entries.bindata
   548 A702 65 3B			adc p2+1
   549 A704 85 39			sta p1+1
   550 A706 B1 38			lda (p1),y
   551 A708 60				rts
   552 					.endp
   553
   554 A709				.proc get_next_byte_from_p1
   555 A709 C8				iny
   556 A70A B1 38			lda (p1),y
   557 A70C 60				rts
   558 					.endp
   559
   560 A70D				.proc init_blank_screen
   561 = 002D				dl_zp = icax4z
   562
   563 A70D 20 E0 AA			jsr set_colors_laae0
   564 A710 A9 FF			lda #$ff
   565 A712 8D FC 02			sta ch
   566 A715 A9 41			lda #$41
   567 A717 85 2D			sta dl_zp
   568 A719 A9 2D			lda #<dl_zp
   569 A71B 85 2E			sta dl_zp+1
   570 A71D 8D 30 02			sta sdlstl
   571 A720 8D 02 D4			sta dlistl
   572 A723 A9 00			lda #>dl_zp
   573 A725 85 2F			sta dl_zp+2
   574 A727 8D 31 02			sta sdlsth
   575 A72A 8D 03 D4			sta dlisth
   576 A72D A9 E0			lda #$e0
   577 A72F 8D F4 02			sta chbas
   578 A732 8D 09 D4			sta chbase
   579 A735 8D 0A D4			sta wsync
   580 A738 AD 0B D4		loop	lda vcount
   581 A73B D0 FB			bne loop
   582 A73D A0 00			ldy #$00
   583 A73F 2C 05 A4			bit options.anticoff
   584 A742 10 06			bpl skip_blank
   585 A744 8C 2F 02			sty sdmctl
   586 A747 8C 00 D4			sty dmaclt
   587 A74A			skip_blank
   588 A74A 60				rts
   589 					.endp
   590
   591 A74B				.proc start_menu_entry		;IN: ichidz = entry number
   592 A74B 20 0D A7			jsr init_blank_screen
   593 A74E 20 E3 A6			jsr compute_index_on_bindata
   594 A751 85 21			sta entry_type
   595 A753 20 09 A7			jsr get_next_byte_from_p1
   596 A756 29 F0			and #$f0
   597 A758 85 15			sta bufadr
   598 A75A A9 00			lda #$00
   599 A75C 85 16			sta bufadr+1
   600 A75E 20 09 A7			jsr get_next_byte_from_p1
   601 A761 85 3B			sta p2+1
   602 A763 A9 00			lda #$00
   603 A765 85 3A			sta p2
   604 A767 20 09 A7			jsr get_next_byte_from_p1
   605 A76A 48				pha
   606 A76B 20 09 A7			jsr get_next_byte_from_p1
   607 A76E 48				pha
   608 A76F 20 09 A7			jsr get_next_byte_from_p1
   609 A772 48				pha
   610 A773 85 22			sta iccomz
   611 A775 20 09 A7			jsr get_next_byte_from_p1
   612 A778 85 23			sta icstaz
   613 A77A 20 09 A7			jsr get_next_byte_from_p1
   614 A77D 85 24			sta icbalz
   615 A77F AD 01 D3			lda portb
   616 A782 29 01			and #$01
   617 A784 F0 39			beq handle_entry_type_lae7bf
   618
   619 A786 24 23			bit icstaz
   620 A788 10 19			bpl la7a3
   621 A78A AD 04 F1			lda os.lf104
   622 A78D C9 4D			cmp #$4d
   623 A78F F0 12			beq la7a3
   624
   625 A791 20 63 A6			jsr os_handler.disable_os_rom
   626 A794 A2 CA			ldx #<os_handler.la5ca
   627 A796 A0 A5			ldy #>os_handler.la5ca
   628 A798 20 76 A4			jsr copy_page_to_l1000_and_run
   629 A79B A5 20			lda ichidz
   630 A79D 8D 00 E0			sta le000
   631 A7A0 4C 74 E4			jmp warmsv
   632
   633 A7A3 24 23		la7a3	bit icstaz
   634 A7A5 50 18			bvc handle_entry_type_lae7bf
   635 A7A7 20 63 A6			jsr os_handler.disable_os_rom
   636 A7AA A2 A7			ldx #<os_handler.copy_os_to_ram
   637 A7AC A0 A4			ldy #>os_handler.copy_os_to_ram
   638 A7AE 20 76 A4			jsr copy_page_to_l1000_and_run
   639 A7B1 A5 20			lda ichidz
   640 A7B3 8D 00 E0			sta le000
   641 A7B6 20 24 A5			jsr os_handler.patch_os
   642 A7B9 20 1E A5			jsr os_handler.set_os_c4af
   643 A7BC 4C 8E A4			jmp run_coldstart
   644 					
   645 A7BF				.proc handle_entry_type_lae7bf	;entry_type = type of entry/loader
   646 A7BF A5 21			lda entry_type
   647 A7C1 C9 01			cmp #$01
   648 A7C3 F0 33			beq la7f8
   649 A7C5 C9 02			cmp #$02
   650 A7C7 F0 20			beq jump_la967
   651 A7C9 C9 03			cmp #$03
   652 A7CB F0 19			beq jump_patch_sio_la99c
   653 A7CD C9 04			cmp #$04
   654 A7CF F0 1B			beq jump_la893
   655 A7D1 C9 05			cmp #$05
   656 A7D3 F0 1D			beq jump_la988
   657 A7D5 C9 06			cmp #$06
   658 A7D7 F0 16			beq jump_la97e
   659 A7D9 C9 07			cmp #$07
   660 A7DB F0 18			beq jump_la992
   661 A7DD AD 0A D2		loop	lda random		;Error loop
   662 A7E0 8D 1A D0			sta colbk
   663 A7E3 4C DD A7			jmp loop
   664
   665 A7E6 4C 9C A9		jump_patch_sio_la99c	jmp patch_sio_la99c
   666 A7E9 4C 67 A9		jump_la967	jmp la967
   667 A7EC 4C 93 A8		jump_la893	jmp la893
   668 A7EF 4C 7E A9		jump_la97e	jmp la97e
   669 A7F2 4C 88 A9		jump_la988	jmp la988
   670 A7F5 4C 92 A9		jump_la992	jmp la992
   671
   672
   673 A7F8				.proc la7f8
   674 A7F8 A0 06			ldy #$06
   675 A7FA 68				pla
   676 A7FB 91 15			sta (bufadr),y
   677 A7FD A0 02			ldy #$02
   678 A7FF 68				pla
   679 A800 91 15			sta (bufadr),y
   680 A802 A0 03			ldy #$03
   681 A804 68				pla
   682 A805 91 15			sta (bufadr),y
   683 A807 A0 07			ldy #$07
   684 A809 A9 00			lda #$00
   685 A80B 91 15			sta (bufadr),y
   686 A80D A0 00			ldy #$00
   687 A80F A5 24			lda icbalz
   688 A811 29 80			and #$80
   689 A813 4A				lsr
   690 A814 0D 00 A4			ora options.colors
   691 A817 91 15			sta (bufadr),y
   692 A819 A0 01			ldy #$01
   693 A81B AD 06 A4			lda options.cartoff
   694 A81E 91 15			sta (bufadr),y
   695 A820 A2 BF			ldx #<unpacker_rom
   696 A822 A0 BD			ldy #>unpacker_rom
   697 A824 86 38			stx p1
   698 A826 84 39			sty p1+1
   699 A828 A0 00			ldy #$00
   700 A82A B1 38		la82a	lda (p1),y
   701 A82C 2C 00 A4			bit options.colors
   702 A82F 10 03			bpl la834
   703 A831 8D 1A D0			sta colbk
   704 A834 91 3A		la834	sta (p2),y
   705 A836 C8				iny
   706 A837 D0 F1			bne la82a
   707 A839 A2 BF			ldx #<lbebf
   708 A83B A0 BE			ldy #>lbebf
   709 A83D 86 38			stx p1
   710 A83F 84 39			sty p1+1
   711 A841 A2 00			ldx #$00
   712 A843 8A			la843	txa
   713 A844 A8				tay
   714 A845 B1 38			lda (p1),y
   715 A847 F0 0C			beq la855
   716 A849 A8				tay
   717 A84A B1 3A			lda (p2),y
   718 A84C 29 0F			and #$0f
   719 A84E 05 15			ora bufadr
   720 A850 91 3A			sta (p2),y
   721 A852 E8				inx
   722 A853 D0 EE			bne la843
   723 A855			la855
   724 A855 A2 E9			ldx #<lbee9
   725 A857 A0 BE			ldy #>lbee9
   726 A859 86 38			stx p1
   727 A85B 84 39			sty p1+1
   728
   729 A85D A2 00			ldx #$00
   730 A85F 8A			la85f	txa
   731 A860 A8				tay
   732 A861 B1 38			lda (p1),y
   733 A863 F0 08			beq la86d
   734 A865 A8				tay
   735 A866 A5 3B			lda p2+1
   736 A868 91 3A			sta (p2),y
   737 A86A E8				inx
   738 A86B D0 F2			bne la85f
   739 A86D A9 01		la86d	lda #$01
   740 A86F 85 09			sta boot
   741 A871 A9 FF			lda #$ff
   742 A873 8D 0E D4			sta nmien
   743 A876 AA				tax
   744 A877 9A				txs
   745 A878 58				cli
   746 A879 A5 23			lda icstaz
   747 A87B 29 20			and #$20
   748 A87D F0 03			beq la882
   749 A87F 20 33 B1			jsr screen.open_editor
   750 A882 A5 23		la882	lda icstaz
   751 A884 29 10			and #$10
   752 A886 F0 08			beq la890
   753 A888 A9 00			lda #$00
   754 A88A 8D 2F 02			sta sdmctl
   755 A88D 8D 00 D4			sta dmaclt
   756 A890 6C 3A 00		la890	jmp (p2)
   757 					.endp
   758
   759 A893				.proc la893
   760 A893 20 F1 AE			jsr copy_dl_to_ram
   761 A896 20 34 B0			jsr screen.clear_screen
   762 A899 A2 00			ldx #$00
   763 A89B A0 02			ldy #$02
   764 A89D 20 A4 B0			jsr screen.set_cursor
   765 A8A0 A9 D4			lda #<messages.la8d4
   766 A8A2 A0 A8			ldy #>messages.la8d4
   767 A8A4 20 02 B0			jsr screen.print_line
   768 A8A7 A2 00			ldx #$00
   769 A8A9 A0 03			ldy #$03
   770 A8AB 20 A4 B0			jsr screen.set_cursor
   771 A8AE A9 F5			lda #<messages.la8f5
   772 A8B0 A0 A8			ldy #>messages.la8f5
   773 A8B2 20 02 B0			jsr screen.print_line
   774 A8B5 A2 00			ldx #$00
   775 A8B7 A0 05			ldy #$05
   776 A8B9 20 A4 B0			jsr screen.set_cursor
   777 A8BC A9 1B			lda #<messages.la91b
   778 A8BE A0 A9			ldy #>messages.la91b
   779 A8C0 20 02 B0			jsr screen.print_line
   780 A8C3 A2 00			ldx #$00
   781 A8C5 A0 06			ldy #$06
   782 A8C7 20 A4 B0			jsr screen.set_cursor
   783 A8CA A9 42			lda #<messages.la942
   784 A8CC A0 A9			ldy #>messages.la942
   785 A8CE 20 02 B0			jsr screen.print_line
   786 A8D1 4C D1 A8		stop	jmp stop
   787
   788
   789 A8D4				.local messages
   790 A8D4 31 36 6B 42 20 52 + la8d4	.byte '16kB ROM dumps are not supported',$9b
   791 A8F5 6F 6E 20 4D 61 78 + la8f5	.byte 'on Maxflash G1 cartridges or preview.',$9b
   792 A91B 50 6C 65 61 73 65 + la91b	.byte 'Please try the cracked .XEX version of',$9b
   793 A942 74 68 69 73 20 74 + la942	.byte 'this title in your workbook instead.',$9b
   794 					.endl
   795
   796 					.endp
   797
   798 A967				.proc la967
   799 A967 A9 FF			lda #$ff
   800 A969 8D 0E D4			sta nmien
   801 A96C AA				tax
   802 A96D 9A				txs
   803 A96E 58				cli
   804 A96F A2 76			ldx #<la976
   805 A971 A0 A9			ldy #>la976
   806 A973 4C 76 A4			jmp copy_page_to_l1000_and_run
   807
   808 A976				.proc la976
   809 A976 A6 22			ldx iccomz
   810 A978 9D 00 D5			sta ld500,x
   811 A97B 4C 77 E4			jmp coldsv
   812 					.endp
   813
   814 					.endp
   815
   816 A97E				.proc la97e
   817 A97E A5 22			lda iccomz
   818 A980 18				clc
   819 A981 69 03			adc #$03
   820 A983 85 22			sta iccomz
   821 A985 4C 67 A9			jmp la967
   822 					.endp
   823
   824 A988				.proc la988
   825 A988 A5 22			lda iccomz
   826 A98A 18				clc
   827 A98B 69 07			adc #$07
   828 A98D 85 22			sta iccomz
   829 A98F 4C 67 A9			jmp la967
   830 					.endp
   831
   832 A992				.proc la992
   833 A992 A5 22			lda iccomz
   834 A994 18				clc
   835 A995 69 0F			adc #$0f
   836 A997 85 22			sta iccomz
   837 A999 4C 67 A9			jmp la967
   838 					.endp
   839
   840 A99C				.proc patch_sio_la99c
   841 A99C 20 63 A6			jsr os_handler.disable_os_rom
   842 A99F A9 00			lda #<os.lc100
   843 A9A1 8D 5A E4			sta siov+1
   844 A9A4 A9 C1			lda #>os.lc100
   845 A9A6 8D 5B E4			sta siov+2
   846 A9A9 A9 20			lda #$20
   847 A9AB 8D DC FF			sta os.lffdc
   848 A9AE A9 56			lda #<os.lc256
   849 A9B0 8D DD FF			sta os.lffdc+1
   850 A9B3 A9 C2			lda #>os.lc256
   851 A9B5 8D DE FF			sta os.lffdc+2
   852 A9B8 AD 06 A4			lda options.cartoff
   853 A9BB 8D D6 C2			sta os.lc2d6
   854 A9BE AD 00 A4			lda options.colors
   855 A9C1 8D D7 C2			sta os.lc2d7
   856 A9C4 68				pla
   857 A9C5 8D D1 C2			sta os.lc2d1
   858 A9C8 68				pla
   859 A9C9 8D D2 C2			sta os.lc2d2
   860 A9CC 68				pla
   861 A9CD 8D D3 C2			sta os.lc2d3
   862 A9D0 20 E3 A6			jsr compute_index_on_bindata
   863 A9D3 20 09 A7			jsr get_next_byte_from_p1
   864 A9D6 8D D4 C2			sta os.lc2d4
   865 A9D9 C9 FF			cmp #$ff
   866 A9DB D0 12			bne la9ef
   867 A9DD AD E6 C2			lda os.lc2e6
   868 A9E0 09 20			ora #$20
   869 A9E2 8D E6 C2			sta os.lc2e6
   870 A9E5 A9 01			lda #$01
   871 A9E7 8D E0 C2			sta os.lc2e0
   872 A9EA A9 00			lda #$00
   873 A9EC 8D E1 C2			sta os.lc2e1
   874 A9EF 20 09 A7		la9ef	jsr get_next_byte_from_p1
   875 A9F2 AA				tax
   876 A9F3 29 80			and #$80
   877 A9F5 8D D8 C2			sta os.lc2d8
   878 A9F8 8A				txa
   879 A9F9 0A				asl
   880 A9FA 29 80			and #$80
   881 A9FC 8D D9 C2			sta os.lc2d9
   882 A9FF A9 00			lda #$00
   883 AA01 85 1E			sta abufpt+2
   884 AA03 85 1F			sta abufpt+3
   885 AA05 20 E3 A6		laa05	jsr compute_index_on_bindata
   886 AA08 C9 03			cmp #$03
   887 AA0A F0 06			beq laa12
   888 AA0C E6 20		laa0c	inc ichidz
   889 AA0E 10 F5			bpl laa05
   890 AA10 30 2A			bmi laa3c
   891 AA12 A6 1E		laa12	ldx abufpt+2
   892 AA14 20 09 A7			jsr get_next_byte_from_p1
   893 AA17 9D F6 C2			sta os.lc2f6,x
   894 AA1A E6 1E			inc abufpt+2
   895 AA1C A6 1F			ldx abufpt+3
   896 AA1E 20 09 A7			jsr get_next_byte_from_p1
   897 AA21 20 09 A7			jsr get_next_byte_from_p1
   898 AA24 9D EA C2			sta os.lc2ea,x
   899 AA27 E8				inx
   900 AA28 20 09 A7			jsr get_next_byte_from_p1
   901 AA2B 9D EA C2			sta os.lc2ea,x
   902 AA2E E8				inx
   903 AA2F 20 09 A7			jsr get_next_byte_from_p1
   904 AA32 9D EA C2			sta os.lc2ea,x
   905 AA35 E8				inx
   906 AA36 86 1F			stx abufpt+3
   907 AA38 E0 0C			cpx #$0c
   908 AA3A D0 D0			bne laa0c
   909 AA3C A9 FF		laa3c	lda #$ff
   910 AA3E 8D 0E D4			sta nmien
   911 AA41 AA				tax
   912 AA42 9A				txs
   913 AA43 58				cli
   914 AA44 AD 06 A4			lda options.cartoff
   915 AA47 48				pha
   916 AA48 A2 4F			ldx #<laa4f_at_1000
   917 AA4A A0 AA			ldy #>laa4f_at_1000
   918 AA4C 4C 76 A4			jmp copy_page_to_l1000_and_run
   919 					
   920 AA4F				.proc laa4f_at_1000
   921 AA4F 68				pla
   922 AA50 AA				tax
   923 AA51 9D 00 D5			sta ld500,x
   924 AA54 A9 A9			lda #$a9		;LDA #
   925 AA56 8D 57 F2			sta os.lf257
   926 AA59 2C D9 C2			bit os.lc2d9
   927 AA5C 30 03			bmi laa61
   928 AA5E A9 C0			lda #$c0		;LDA #$C0
   929 AA60 2C				.byte $2c
   930 AA61 A9 A0		laa61	lda #$a0		;LDA #$A0
   931 AA63 8D 58 F2			sta os.lf257+1
   932 AA66 A9 85			lda #$85		;STA $06/unpacker.bank_number
   933 AA68 8D 59 F2			sta os.lf259
   934 AA6B A9 06			lda #<unpacker.bank_number
   935 AA6D 8D 5A F2			sta os.lf259+1
   936 AA70 A9 60			lda #$60		;RTS
   937 AA72 8D 5B F2			sta os.lf25b
   938
   939 AA75 2C D9 C2			bit os.lc2d9
   940 AA78 10 08			bpl laa82
   941 AA7A AD 01 D3			lda portb
   942 AA7D 29 FD			and #$fd
   943 AA7F 8D 01 D3			sta portb
   944 AA82 4C 77 E4		laa82	jmp coldsv
   945 					.endp
   946
   947 					.endp
   948
   949 					.endp
   950
   951 					.endp			;End of start_menu_entry
   952 				 
   953 AA85				.proc initialize_system	;Initialize reset state, ports, POKEY, ANTIC, IRQs and NMIs
   954 AA85 A9 00			lda #$00
   955 AA87 8D 44 02			sta coldst
   956 AA8A 85 08			sta warmst
   957 AA8C A9 C0			lda #$c0
   958 AA8E 8D E4 02			sta ramsiz
   959 AA91 EE F8 03			inc basicf
   960 AA94 A9 00			lda #$00
   961 AA96 8D 00 D3			sta porta
   962 AA99 A9 3C			lda #$3c
   963 AA9B 8D 02 D3			sta pactl
   964 AA9E 8D 03 D3			sta pbctl
   965 AAA1 AD 00 D3			lda porta
   966 AAA4 A9 23			lda #$23
   967 AAA6 8D 0F D2			sta skstat
   968 AAA9 A9 A0			lda #$a0
   969 AAAB 8D 05 D2			sta audc2
   970 AAAE 8D 07 D2			sta audc3
   971 AAB1 A9 28			lda #$28
   972 AAB3 8D 08 D2			sta audctl
   973 AAB6 A9 FF			lda #$ff
   974 AAB8 8D 0D D2			sta serout
   975 AABB A9 C0			lda #$c0
   976 AABD 85 10			sta pokmsk
   977 AABF 8D 0E D2			sta irqen
   978 AAC2 A9 7F			lda #$7f
   979 AAC4 8D 0E D4			sta nmien
   980 AAC7 A9 00			lda #$00
   981 AAC9 8D 08 D2			sta audctl
   982 AACC A9 A0			lda #>chr
   983 AACE 8D 09 D4			sta chbase
   984 AAD1 8D F4 02			sta chbas
   985 AAD4 A9 02			lda #$02
   986 AAD6 8D 01 D4			sta chactl
   987 AAD9 8D F3 02			sta chact
   988 AADC 20 E0 AA			jsr set_colors_laae0
   989 AADF 60				rts
   990 					.endp
   991
   992 AAE0				.proc set_colors_laae0
   993 AAE0 A9 FF			lda #$ff
   994 AAE2 8D C0 02			sta pcolr0
   995 AAE5 8D C1 02			sta pcolr1
   996 AAE8 8D C2 02			sta pcolr2
   997 AAEB 8D C3 02			sta pcolr3
   998 AAEE A9 28			lda #$28
   999 AAF0 8D C4 02			sta color0
  1000 AAF3 A9 CA			lda #$ca
  1001 AAF5 8D C5 02			sta color1
  1002 AAF8 A9 94			lda #$94
  1003 AAFA 8D C6 02			sta color2
  1004 AAFD A9 46			lda #$46
  1005 AAFF 8D C7 02			sta color3
  1006 AB02 60				rts
  1007 					.endp
  1008
  1009 AB03				.proc lab03
  1010 AB03 A2 00			ldx #$00
  1011 AB05 A0 17			ldy #status_line
  1012 AB07 20 A4 B0			jsr screen.set_cursor
  1013 AB0A 20 74 B0			jsr screen.clear_line
  1014 AB0D A2 00			ldx #$00
  1015 AB0F A0 17			ldy #status_line
  1016 AB11 20 A4 B0			jsr screen.set_cursor
  1017 AB14 A9 C7			lda #<message_enter_choice
  1018 AB16 A0 AB			ldy #>message_enter_choice
  1019 AB18 20 02 B0			jsr screen.print_line
  1020 AB1B A9 00			lda #$00
  1021 AB1D 85 20			sta ichidz
  1022 AB1F A5 1D			lda abufpt+1
  1023 AB21 4C 27 AB			jmp lab24.lab27
  1024
  1025 AB24				.proc lab24
  1026 AB24 20 54 AE			jsr get_key_lae54
  1027 AB27 A5 19		lab27	lda menu_key
  1028 AB29 C9 00			cmp #$00
  1029 AB2B F0 4C			beq lab79
  1030 AB2D C9 05			cmp #$05
  1031 AB2F D0 F3			bne lab24
  1032 AB31 A5 1D			lda abufpt+1
  1033 AB33 C9 34			cmp #$34
  1034 AB35 F0 27			beq lab5e
  1035 AB37 C9 1C			cmp #$1c
  1036 AB39 F0 7C			beq labb7
  1037 AB3B A2 00			ldx #$00
  1038 AB3D DD EE AB		lab3d	cmp keycodes,x
  1039 AB40 F0 07			beq lab49
  1040 AB42 E8				inx
  1041 AB43 E0 0A			cpx #$0a
  1042 AB45 D0 F6			bne lab3d
  1043 AB47 F0 DB			beq lab24
  1044 AB49 A4 20		lab49	ldy ichidz
  1045 AB4B C0 03			cpy #$03
  1046 AB4D F0 D5			beq lab24
  1047 AB4F BD F8 AB			lda numbers_labf8,x
  1048 AB52 A6 20			ldx ichidz
  1049 AB54 95 23			sta icstaz,x
  1050 AB56 20 F8 B0			jsr screen.print_ascii_char
  1051 AB59 E6 20			inc ichidz
  1052 AB5B 4C 24 AB			jmp lab24
  1053 AB5E A4 20		lab5e	ldy ichidz
  1054 AB60 F0 C2			beq lab24
  1055 AB62 C6 20			dec ichidz
  1056 AB64 A6 15			ldx bufadr
  1057 AB66 CA				dex
  1058 AB67 20 DA B0			jsr screen.set_cursor_x
  1059 AB6A AD 02 AC			lda space_lac02
  1060 AB6D 20 F8 B0			jsr screen.print_ascii_char
  1061 AB70 A6 15			ldx bufadr
  1062 AB72 CA				dex
  1063 AB73 20 DA B0			jsr screen.set_cursor_x
  1064 AB76 4C 24 AB			jmp lab24
  1065 					.endp
  1066
  1067 AB79 A6 20		lab79	ldx ichidz
  1068 AB7B F0 3A			beq labb7
  1069 AB7D E0 03		lab7d	cpx #$03
  1070 AB7F F0 06			beq lab87
  1071 AB81 20 B9 AB			jsr labb9
  1072 AB84 E8				inx
  1073 AB85 10 F6			bpl lab7d
  1074 AB87 A9 00		lab87	lda #$00
  1075 AB89 85 20			sta ichidz
  1076 AB8B A5 23			lda icstaz
  1077 AB8D 29 0F			and #$0f
  1078 AB8F F0 08			beq lab99
  1079 AB91 C9 02			cmp #$02
  1080 AB93 B0 22			bcs labb7
  1081 AB95 A9 64			lda #$64
  1082 AB97 85 20			sta ichidz
  1083 AB99 A5 24		lab99	lda icbalz
  1084 AB9B 29 0F			and #$0f
  1085 AB9D AA				tax
  1086 AB9E BD E4 AB			lda page_offsets,x
  1087 ABA1 18				clc
  1088 ABA2 65 20			adc ichidz
  1089 ABA4 85 20			sta ichidz
  1090 ABA6 A5 25			lda icbahz
  1091 ABA8 29 0F			and #$0f
  1092 ABAA 18				clc
  1093 ABAB 65 20			adc ichidz
  1094 ABAD 85 20			sta ichidz
  1095 ABAF F0 06			beq labb7
  1096 ABB1 C9 80			cmp #$80
  1097 ABB3 B0 02			bcs labb7
  1098 ABB5 18				clc
  1099 ABB6 60				rts
  1100
  1101 ABB7 38			labb7	sec
  1102 ABB8 60				rts
  1103
  1104 ABB9				.proc labb9
  1105 ABB9 A5 24			lda icbalz
  1106 ABBB 85 25			sta icbahz
  1107 ABBD A5 23			lda icstaz
  1108 ABBF 85 24			sta icbalz
  1109 ABC1 AD F8 AB			lda numbers_labf8
  1110 ABC4 85 23			sta icstaz
  1111 ABC6 60				rts
  1112 					.endp
  1113
  1114 ABC7				.local message_enter_choice
  1115 ABC7 45 6E 74 65 72 20 + 	.byte 'Enter Choice (ESC to Abort):'
  1116 ABE3 20				.byte $20
  1117 					.endl
  1118
  1119
  1120 ABE4 00 0A 14 1E 28 32 + page_offsets	.byte $00,$0a,$14,$1e,$28,$32,$3c,$46,$50,$5a
  1121 ABEE 32 1F 1E 1A 18 1D + keycodes	.byte $32,$1f,$1e,$1a,$18,$1d,$1b,$33,$35,$30
  1122 ABF8 30 31 32 33 34 35 + numbers_labf8	.byte '0123456789'
  1123 AC02 20			space_lac02	.byte ' '
  1124
  1125 					.endp
  1126
  1127 AC03				.proc init_title_footer_and_status
  1128 AC03 A2 00			ldx #$00
  1129 AC05 A0 00			ldy #$00
  1130 AC07 20 A4 B0			jsr screen.set_cursor
  1131 AC0A A9 F5			lda #<title
  1132 AC0C A0 BE			ldy #>title
  1133 AC0E 20 02 B0			jsr screen.print_line
  1134 AC11 A2 00			ldx #$00
  1135 AC13 A0 17			ldy #status_line
  1136 AC15 20 A4 B0			jsr screen.set_cursor
  1137 AC18 A9 1E			lda #<footer
  1138 AC1A A0 BF			ldy #>footer
  1139 AC1C 20 02 B0			jsr screen.print_line
  1140 AC1F 60				rts
  1141 					.endp
  1142
  1143 AC20				.proc select_entry_lac20
  1144 AC20 20 34 B0			jsr screen.clear_screen
  1145 AC23 A9 01			lda #$01
  1146 AC25 85 1A			sta dskutl
  1147 AC27 A9 00			lda #$00
  1148 AC29 85 1B			sta dskutl+1
  1149 AC2B 20 03 AC			jsr init_title_footer_and_status
  1150 AC2E 20 54 B0		lac2e	jsr screen.clear_screen2
  1151 AC31 A9 00			lda #$00
  1152 AC33 85 18			sta dskfms
  1153 AC35 A9 70			lda #<menu_entries.choices
  1154 AC37 85 38			sta p1
  1155 AC39 A9 B1			lda #>menu_entries.choices
  1156 AC3B 85 39			sta p1+1
  1157 AC3D A5 1B		lac3d	lda dskutl+1
  1158 AC3F C5 18			cmp dskfms
  1159 AC41 F0 07			beq lac4a
  1160 AC43 20 E0 AF			jsr lafe0
  1161 AC46 E6 18			inc dskfms
  1162 AC48 10 F3			bpl lac3d
  1163 AC4A AD 6F B1		lac4a	lda menu_entries.totalchoices
  1164 AC4D 38				sec
  1165 AC4E E5 1B			sbc dskutl+1
  1166 AC50 C9 17			cmp #$17
  1167 AC52 90 02			bcc lac56
  1168 AC54 A9 16			lda #$16
  1169 AC56 85 1C		lac56	sta abufpt
  1170 AC58 20 06 B0		lac58	jsr screen.print_line.with_p1
  1171 AC5B C6 1C			dec abufpt
  1172 AC5D D0 F9			bne lac58
  1173
  1174 AC5F			loop_lac5f
  1175 AC5F A4 1A			ldy dskutl
  1176 AC61 20 E0 B0			jsr screen.set_cursor_y
  1177 AC64 20 85 B0			jsr screen.invert_line
  1178 AC67 20 54 AE			jsr get_key_lae54
  1179 AC6A 20 98 B0			jsr screen.normalize_inverted_line
  1180 AC6D A5 19			lda menu_key
  1181 AC6F C9 01			cmp #$01
  1182 AC71 F0 49			beq lacbc
  1183 AC73 C9 02			cmp #$02
  1184 AC75 F0 6F			beq lace6
  1185 AC77 C9 03			cmp #$03
  1186 AC79 F0 57			beq lacd2
  1187 AC7B C9 04			cmp #$04
  1188 AC7D F0 31			beq lacb0
  1189 AC7F C9 00			cmp #$00
  1190 AC81 F0 17			beq lac9a
  1191 AC83 C9 05			cmp #$05
  1192 AC85 D0 D8			bne loop_lac5f
  1193 AC87 20 03 AB			jsr lab03
  1194 AC8A B0 08			bcs lac94
  1195 AC8C 20 61 A4			jsr get_from_menumap
  1196 AC8F C9 FF			cmp #$ff
  1197 AC91 F0 01			beq lac94
  1198 AC93 60				rts
  1199
  1200 AC94 20 03 AC		lac94	jsr init_title_footer_and_status
  1201 AC97 4C 5F AC			jmp loop_lac5f
  1202
  1203 AC9A F0 71		lac9a	beq lad0d
  1204 AC9C A5 1B		lac9c	lda dskutl+1
  1205 AC9E F0 BF			beq loop_lac5f
  1206 ACA0 38				sec
  1207 ACA1 E9 16			sbc #$16
  1208 ACA3 90 04			bcc laca9
  1209 ACA5 85 1B			sta dskutl+1
  1210 ACA7 B0 85			bcs lac2e
  1211 ACA9 A9 00		laca9	lda #$00
  1212 ACAB 85 1B			sta dskutl+1
  1213 ACAD 4C 2E AC			jmp lac2e
  1214 ACB0 A5 1A		lacb0	lda dskutl
  1215 ACB2 C9 01			cmp #$01
  1216 ACB4 F0 E6			beq lac9c
  1217 ACB6 A9 01			lda #$01
  1218 ACB8 85 1A			sta dskutl
  1219 ACBA D0 A3		lacba	bne loop_lac5f
  1220 ACBC A5 1A		lacbc	lda dskutl
  1221 ACBE C9 01			cmp #$01
  1222 ACC0 F0 04			beq lacc6
  1223 ACC2 C6 1A			dec dskutl
  1224 ACC4 10 99			bpl loop_lac5f
  1225 ACC6 A5 1B		lacc6	lda dskutl+1
  1226 ACC8 F0 95		lacc8	beq loop_lac5f
  1227 ACCA C6 1B			dec dskutl+1
  1228 ACCC 20 A1 AD			jsr lada1
  1229 ACCF 4C 5F AC			jmp loop_lac5f
  1230 ACD2 A5 1A		lacd2	lda dskutl
  1231 ACD4 C9 16			cmp #$16
  1232 ACD6 F0 42			beq lad1a
  1233 ACD8 A9 16			lda #$16
  1234 ACDA CD 6F B1			cmp menu_entries.totalchoices
  1235 ACDD 90 03			bcc lace2
  1236 ACDF AD 6F B1			lda menu_entries.totalchoices
  1237 ACE2 85 1A		lace2	sta dskutl
  1238 ACE4 D0 D4			bne lacba
  1239 ACE6 A5 1A		lace6	lda dskutl
  1240 ACE8 C9 16			cmp #$16
  1241 ACEA F0 0F			beq lacfb
  1242 ACEC 18				clc
  1243 ACED A5 1B			lda dskutl+1
  1244 ACEF 65 1A			adc dskutl
  1245 ACF1 CD 6F B1			cmp menu_entries.totalchoices
  1246 ACF4 B0 02		lacf4	bcs lacf8
  1247 ACF6 E6 1A			inc dskutl
  1248 ACF8 4C 5F AC		lacf8	jmp loop_lac5f
  1249 ACFB A5 1B		lacfb	lda dskutl+1
  1250 ACFD 18				clc
  1251 ACFE 69 16			adc #$16
  1252 AD00 CD 6F B1			cmp menu_entries.totalchoices
  1253 AD03 B0 EF			bcs lacf4
  1254 AD05 E6 1B			inc dskutl+1
  1255 AD07 20 39 AD			jsr lad39
  1256 AD0A 4C 5F AC			jmp loop_lac5f
  1257
  1258 AD0D 18			lad0d	clc
  1259 AD0E A5 1B			lda dskutl+1
  1260 AD10 65 1A			adc dskutl
  1261 AD12 20 61 A4			jsr get_from_menumap
  1262 AD15 C9 FF			cmp #$ff
  1263 AD17 F0 AF			beq lacc8
  1264 AD19 60				rts
  1265 AD1A A5 1B		lad1a	lda dskutl+1
  1266 AD1C 18				clc
  1267 AD1D 69 2C			adc #$2c
  1268 AD1F CD 6F B1			cmp menu_entries.totalchoices
  1269 AD22 B0 09			bcs lad2d
  1270 AD24 A5 1B			lda dskutl+1
  1271 AD26 69 16			adc #$16
  1272 AD28 85 1B			sta dskutl+1
  1273 AD2A 4C 2E AC			jmp lac2e
  1274 AD2D 38			lad2d	sec
  1275 AD2E AD 6F B1			lda menu_entries.totalchoices
  1276 AD31 E9 16			sbc #$16
  1277 AD33 85 1B			sta dskutl+1
  1278 AD35 4C 2E AC			jmp lac2e
  1279 AD38 60				rts
  1280
  1281 AD39				.proc lad39
  1282 AD39 18				clc
  1283 AD3A AD 51 B1			lda screen.dl.lms_adr
  1284 AD3D 69 28			adc #screen_width
  1285 AD3F 85 3A			sta p2
  1286 AD41 AD 52 B1			lda screen.dl.lms_adr+1
  1287 AD44 69 00			adc #$00
  1288 AD46 85 3B			sta p2+1
  1289
  1290 AD48 18				clc
  1291 AD49 AD 51 B1			lda screen.dl.lms_adr
  1292 AD4C 69 50			adc #screen_width*2
  1293 AD4E 85 38			sta p1
  1294 AD50 AD 52 B1			lda screen.dl.lms_adr+1
  1295 AD53 69 00			adc #$00
  1296 AD55 85 39			sta p1+1
  1297
  1298 AD57 A2 14			ldx #$14
  1299 AD59			line_loop
  1300 AD59 A0 27			ldy #screen_width-1
  1301 AD5B			char_loop
  1302 AD5B B1 38			lda (p1),y
  1303 AD5D 91 3A			sta (p2),y
  1304 AD5F 88				dey
  1305 AD60 10 F9			bpl char_loop
  1306 AD62 18				clc
  1307 AD63 A5 38			lda p1
  1308 AD65 69 28			adc #screen_width
  1309 AD67 85 38			sta p1
  1310 AD69 A5 39			lda p1+1
  1311 AD6B 69 00			adc #$00
  1312 AD6D 85 39			sta p1+1
  1313 AD6F 18				clc
  1314 AD70 A5 3A			lda p2
  1315 AD72 69 28			adc #screen_width
  1316 AD74 85 3A			sta p2
  1317 AD76 A5 3B			lda p2+1
  1318 AD78 69 00			adc #$00
  1319 AD7A 85 3B			sta p2+1
  1320 AD7C CA				dex
  1321 AD7D 10 DA			bpl line_loop
  1322 AD7F A9 70			lda #<menu_entries.choices
  1323 AD81 85 38			sta p1
  1324 AD83 A9 B1			lda #>menu_entries.choices
  1325 AD85 85 39			sta p1+1
  1326 AD87 18				clc
  1327 AD88 A9 14			lda #$14
  1328 AD8A 65 1B			adc dskutl+1
  1329 AD8C 85 18			sta dskfms
  1330
  1331 AD8E 20 E0 AF		loop	jsr lafe0
  1332 AD91 C6 18			dec dskfms
  1333 AD93 10 F9			bpl loop
  1334
  1335 AD95 A4 1A			ldy dskutl
  1336 AD97 20 E0 B0			jsr screen.set_cursor_y
  1337 AD9A 20 74 B0			jsr screen.clear_line
  1338 AD9D 20 06 B0			jsr screen.print_line.with_p1
  1339 ADA0 60				rts
  1340 					.endp
  1341
  1342
  1343
  1344 ADA1				.proc lada1
  1345 ADA1 18				clc
  1346 ADA2 AD 51 B1			lda screen.dl.lms_adr
  1347 ADA5 69 70			adc #$70
  1348 ADA7 85 3A			sta p2
  1349 ADA9 AD 52 B1			lda screen.dl.lms_adr+1
  1350 ADAC 69 03			adc #$03
  1351 ADAE 85 3B			sta p2+1
  1352 ADB0 18				clc
  1353 ADB1 AD 51 B1			lda screen.dl.lms_adr
  1354 ADB4 69 48			adc #$48
  1355 ADB6 85 38			sta p1
  1356 ADB8 AD 52 B1			lda screen.dl.lms_adr+1
  1357 ADBB 69 03			adc #$03
  1358 ADBD 85 39			sta p1+1
  1359 ADBF A2 14			ldx #$14
  1360 ADC1			line_loop
  1361 ADC1 A0 27			ldy #screen_width-1
  1362 ADC3			char_loop
  1363 ADC3 B1 38			lda (p1),y
  1364 ADC5 91 3A			sta (p2),y
  1365 ADC7 88				dey
  1366 ADC8 10 F9			bpl char_loop
  1367 ADCA 38				sec
  1368 ADCB A5 38			lda p1
  1369 ADCD E9 28			sbc #screen_width
  1370 ADCF 85 38			sta p1
  1371 ADD1 A5 39			lda p1+1
  1372 ADD3 E9 00			sbc #$00
  1373 ADD5 85 39			sta p1+1
  1374 ADD7 38				sec
  1375 ADD8 A5 3A			lda p2
  1376 ADDA E9 28			sbc #screen_width
  1377 ADDC 85 3A			sta p2
  1378 ADDE A5 3B			lda p2+1
  1379 ADE0 E9 00			sbc #$00
  1380 ADE2 85 3B			sta p2+1
  1381 ADE4 CA				dex
  1382 ADE5 10 DA			bpl line_loop
  1383 ADE7 A9 70			lda #$70
  1384 ADE9 85 38			sta p1
  1385 ADEB A9 B1			lda #$b1
  1386 ADED 85 39			sta p1+1
  1387 ADEF A5 1B			lda dskutl+1
  1388 ADF1 F0 09			beq ladfc
  1389 ADF3 85 18			sta dskfms
  1390 ADF5 20 E0 AF		ladf5	jsr lafe0
  1391 ADF8 C6 18			dec dskfms
  1392 ADFA D0 F9			bne ladf5
  1393 ADFC A4 1A		ladfc	ldy dskutl
  1394 ADFE 20 E0 B0			jsr screen.set_cursor_y
  1395 AE01 20 74 B0			jsr screen.clear_line
  1396 AE04 20 06 B0			jsr screen.print_line.with_p1
  1397 AE07 60				rts
  1398 					
  1399 AE08				.proc flash_line
  1400 AE08 A9 04			lda #$04
  1401 AE0A 85 18			sta dskfms
  1402 AE0C 20 85 B0		loop	jsr screen.invert_line
  1403 AE0F 20 39 AE			jsr delay_lae39
  1404 AE12 20 98 B0			jsr screen.normalize_inverted_line
  1405 AE15 20 39 AE			jsr delay_lae39
  1406 AE18 C6 18			dec dskfms
  1407 AE1A D0 F0			bne loop
  1408 AE1C 60				rts
  1409 					.endp
  1410
  1411 AE1D				.proc play_note		;IN: <A>=audf0
  1412 AE1D 8D 00 D2			sta audf0
  1413 AE20 A2 E0			ldx #$e0
  1414 AE22 8E 01 D2		loop1	stx audc0
  1415 AE25 20 44 AE			jsr delay_lae44
  1416 AE28 E8				inx
  1417 AE29 E0 E9			cpx #$e9
  1418 AE2B D0 F5			bne loop1
  1419 AE2D 8E 01 D2		loop2	stx audc0
  1420 AE30 20 44 AE			jsr delay_lae44
  1421 AE33 CA				dex
  1422 AE34 E0 DF			cpx #$df
  1423 AE36 D0 F5			bne loop2
  1424 AE38 60				rts
  1425 					.endp
  1426
  1427 AE39				.proc delay_lae39
  1428 AE39 A2 0F			ldx #$0f
  1429 AE3B			outer_loop
  1430 AE3B A0 FF			ldy #$ff
  1431 AE3D			inner_loop
  1432 AE3D 88				dey
  1433 AE3E D0 FD			bne inner_loop
  1434 AE40 CA				dex
  1435 AE41 D0 F8			bne outer_loop
  1436 AE43 60				rts
  1437 					.endp
  1438 					
  1439 AE44				.proc delay_lae44
  1440 AE44 48				pha
  1441 AE45 8A				txa
  1442 AE46 48				pha
  1443 AE47 98				tya
  1444 AE48 48				pha
  1445 AE49 A2 01			ldx #$01
  1446 AE4B 20 3B AE			jsr delay_lae39.outer_loop
  1447 AE4E 68				pla
  1448 AE4F A8				tay
  1449 AE50 68				pla
  1450 AE51 AA				tax
  1451 AE52 68				pla
  1452 AE53 60				rts
  1453 					.endp
  1454 					.endp
  1455
  1456 					.endp
  1457 					
  1458 AE54				.proc get_key_lae54
  1459 AE54 A9 FF			lda #$ff
  1460 AE56 85 19			sta menu_key
  1461 AE58 8D FC 02			sta ch
  1462 AE5B 2C 04 A4			bit options.fastkeys
  1463 AE5E 10 03			bpl lae63
  1464 AE60 A2 45			ldx #$45
  1465 AE62 2C				.byte $2c
  1466 AE63 A2 75		lae63	ldx #$75
  1467 AE65 A8				tay
  1468 AE66 88			lae66	dey
  1469 AE67 D0 FD			bne lae66
  1470 AE69 CA				dex
  1471 AE6A D0 FA			bne lae66
  1472 AE6C A9 01		lae6c	lda #$01
  1473 AE6E 2C 12 A4			bit options.stick2off
  1474 AE71 30 02			bmi lae75
  1475 AE73 A9 11			lda #$11
  1476 AE75 85 18		lae75	sta dskfms
  1477 AE77 AD 00 D3			lda porta
  1478 AE7A 25 18			and dskfms
  1479 AE7C C5 18			cmp dskfms
  1480 AE7E D0 59			bne laed9
  1481 AE80 06 18			asl dskfms
  1482 AE82 AD 00 D3			lda porta
  1483 AE85 25 18			and dskfms
  1484 AE87 C5 18			cmp dskfms
  1485 AE89 D0 51			bne laedc
  1486 AE8B 06 18			asl dskfms
  1487 AE8D AD 00 D3			lda porta
  1488 AE90 25 18			and dskfms
  1489 AE92 C5 18			cmp dskfms
  1490 AE94 D0 3D			bne laed3
  1491 AE96 06 18			asl dskfms
  1492 AE98 AD 00 D3			lda porta
  1493 AE9B 25 18			and dskfms
  1494 AE9D C5 18			cmp dskfms
  1495 AE9F D0 35			bne laed6
  1496 AEA1 AD 10 D0			lda trig0
  1497 AEA4 F0 3C			beq laee2
  1498 AEA6 2C 12 A4			bit options.stick2off
  1499 AEA9 30 05			bmi key_loop
  1500 AEAB AD 11 D0			lda trig1
  1501 AEAE F0 32			beq laee2
  1502
  1503 AEB0			key_loop
  1504 AEB0 AD FC 02			lda ch
  1505 AEB3 C9 FF			cmp #$ff
  1506 AEB5 F0 B5			beq lae6c
  1507 AEB7 C9 0F			cmp #$0f
  1508 AEB9 F0 21			beq laedc
  1509 AEBB C9 0E			cmp #$0e
  1510 AEBD F0 1A			beq laed9
  1511 AEBF C9 0C			cmp #$0c
  1512 AEC1 F0 1F			beq laee2
  1513 AEC3 C9 21			cmp #$21
  1514 AEC5 F0 1B			beq laee2
  1515 AEC7 C9 07			cmp #$07
  1516 AEC9 F0 0B			beq laed6
  1517 AECB C9 06			cmp #$06
  1518 AECD F0 04			beq laed3
  1519 AECF 85 1D			sta abufpt+1
  1520 AED1 D0 0C			bne laedf
  1521 AED3 A9 04		laed3	lda #$04
  1522 AED5 2C				.byte $2c
  1523 AED6 A9 03		laed6	lda #$03
  1524 AED8 2C				.byte $2c
  1525 AED9 A9 01		laed9	lda #$01
  1526 AEDB 2C				.byte $2c
  1527 AEDC A9 02		laedc	lda #$02
  1528 AEDE 2C				.byte $2c
  1529 AEDF A9 05		laedf	lda #$05
  1530 AEE1 2C				.byte $2c
  1531 AEE2 A9 00		laee2	lda #$00
  1532 AEE4 85 19			sta menu_key
  1533 AEE6 2C 01 A4			bit options.cheese
  1534 AEE9 10 05			bpl laef0
  1535 AEEB A9 08			lda #$08
  1536 AEED 20 1D AE			jsr select_entry_lac20.lada1.play_note
  1537 AEF0 60			laef0	rts
  1538 					.endp
  1539
  1540 AEF1				.proc copy_dl_to_ram
  1541 AEF1 A9 00 85 3A A9 1C + 	mwa #dl_rbam p2
  1542 AEF9 A9 4D 85 38 A9 B1 + 	mwa #screen.dl p1
  1543 AF01 A0 21			ldy #[.len screen.dl]-1
  1544 AF03 B1 38		loop	lda (p1),y
  1545 AF05 91 3A			sta (p2),y
  1546 AF07 88				dey
  1547 AF08 10 F9			bpl loop
  1548
  1549 AF0A AD 6D B1			lda screen.dl.vbl_adr
  1550 AF0D 8D 30 02			sta sdlstl
  1551 AF10 8D 02 D4			sta dlistl
  1552 AF13 AD 6E B1			lda screen.dl.vbl_adr+1
  1553 AF16 8D 31 02			sta sdlsth
  1554 AF19 8D 03 D4			sta dlisth
  1555
  1556 AF1C A9 22			lda #$22
  1557 AF1E 8D 2F 02			sta sdmctl
  1558 AF21 8D 00 D4			sta dmaclt
  1559 AF24 A9 A0			lda #>chr
  1560 AF26 8D F4 02			sta chbas
  1561 AF29 8D 09 D4			sta chbase
  1562 AF2C 20 E0 AA			jsr set_colors_laae0
  1563 AF2F A9 02			lda #2
  1564 AF31 8D F3 02			sta chact
  1565 AF34 8D 01 D4			sta chactl
  1566 AF37 60				rts
  1567 					.endp
  1568
  1569 				;===============================================================
  1570
  1571 AF38				.proc dli
  1572
  1573 AF38				.proc dli_handler
  1574 AF38 48				pha
  1575 AF39 8A				txa
  1576 AF3A 48				pha
  1577 AF3B 98				tya
  1578 AF3C 48				pha
  1579 AF3D AD 0B D4			lda vcount
  1580 AF40 C9 10			cmp #$10
  1581 AF42 B0 04			bcs laf48
  1582 AF44 A9 00			lda #$00
  1583 AF46 85 1E			sta abufpt+2
  1584 AF48 A6 1E		laf48	ldx abufpt+2
  1585 AF4A BC 07 A4			ldy options.textcolors,x
  1586 AF4D E6 1E			inc abufpt+2
  1587 AF4F A5 1E			lda abufpt+2
  1588 AF51 C9 01			cmp #$01
  1589 AF53 F0 1E			beq laf73
  1590 AF55 C9 02			cmp #$02
  1591 AF57 F0 44			beq laf9d
  1592 AF59 2C 11 A4			bit options.cheeseopts
  1593 AF5C 30 2F			bmi laf8d
  1594 AF5E A2 07			ldx #$07
  1595 AF60 8C 0A D4		laf60	sty wsync
  1596 AF63 8C 18 D0			sty colpf2
  1597 AF66 98				tya
  1598 AF67 E9 03			sbc #$03
  1599 AF69 8D 17 D0			sta colpf1
  1600 AF6C 88				dey
  1601 AF6D 88				dey
  1602 AF6E CA				dex
  1603 AF6F D0 EF			bne laf60
  1604 AF71 F0 30			beq lafa3
  1605 AF73 2C 11 A4		laf73	bit options.cheeseopts
  1606 AF76 30 15			bmi laf8d
  1607 AF78 A2 07			ldx #$07
  1608 AF7A 8C 0A D4		laf7a	sty wsync
  1609 AF7D 8C 18 D0			sty colpf2
  1610 AF80 98				tya
  1611 AF81 69 03			adc #$03
  1612 AF83 8D 17 D0			sta colpf1
  1613 AF86 C8				iny
  1614 AF87 C8				iny
  1615 AF88 CA				dex
  1616 AF89 D0 EF			bne laf7a
  1617 AF8B F0 16			beq lafa3
  1618 AF8D 98			laf8d	tya
  1619 AF8E 8D 0A D4			sta wsync
  1620 AF91 29 F0			and #$f0
  1621 AF93 8D 18 D0			sta colpf2
  1622 AF96 A9 FF			lda #$ff
  1623 AF98 8D 17 D0			sta colpf1
  1624 AF9B D0 06			bne lafa3
  1625 AF9D 8C 0A D4		laf9d	sty wsync
  1626 AFA0 8C 18 D0			sty colpf2
  1627 AFA3 68			lafa3	pla
  1628 AFA4 A8				tay
  1629 AFA5 68				pla
  1630 AFA6 AA				tax
  1631 AFA7 68				pla
  1632 AFA8 40				rti
  1633 					.endp
  1634
  1635 AFA9				.proc shutdown_dli
  1636 AFA9 2C 01 A4			bit options.cheese
  1637 AFAC 10 31			bpl setup_dli.return
  1638 AFAE A9 7F			lda #$7f
  1639 AFB0 8D 0E D4			sta nmien
  1640 AFB3 8D 0A D4			sta wsync
  1641 AFB6 A5 0C			lda old_vdslst
  1642 AFB8 8D 00 02			sta vdslst
  1643 AFBB A5 0D			lda old_vdslst+1
  1644 AFBD 8D 01 02			sta vdslst+1
  1645 AFC0 60				rts
  1646 					.endp
  1647
  1648 AFC1				.proc setup_dli
  1649 AFC1 2C 01 A4			bit options.cheese
  1650 AFC4 10 19			bpl return
  1651 AFC6 AD 00 02			lda vdslst
  1652 AFC9 85 0C			sta old_vdslst
  1653 AFCB AD 01 02			lda vdslst+1
  1654 AFCE 85 0D			sta old_vdslst+1
  1655 AFD0 A2 38			ldx #<dli_handler
  1656 AFD2 A0 AF			ldy #>dli_handler
  1657 AFD4 8E 00 02			stx vdslst
  1658 AFD7 8C 01 02			sty vdslst+1
  1659 AFDA A9 FF			lda #$ff
  1660 AFDC 8D 0E D4			sta nmien
  1661 AFDF 60			return	rts
  1662 					.endp
  1663 					
  1664 					.endp		;End of dli
  1665
  1666 				;===============================================================
  1667
  1668 AFE0				.proc lafe0
  1669 AFE0 A9 00			lda #$00
  1670 AFE2 85 17			sta iccomt
  1671 AFE4 A0 00		lafe4	ldy #$00
  1672 AFE6 B1 38			lda (p1),y
  1673 AFE8 F0 04			beq lafee
  1674 AFEA C9 9B			cmp #$9b
  1675 AFEC D0 02			bne laff0
  1676 AFEE C6 17		lafee	dec iccomt
  1677 AFF0 18			laff0	clc
  1678 AFF1 A5 38			lda p1
  1679 AFF3 69 01			adc #$01
  1680 AFF5 85 38			sta p1
  1681 AFF7 A5 39			lda p1+1
  1682 AFF9 69 00			adc #$00
  1683 AFFB 85 39			sta p1+1
  1684 AFFD 24 17			bit iccomt
  1685 AFFF 10 E3			bpl lafe4
  1686 B001 60				rts
  1687 					.endp
  1688 					
  1689 					
  1690
  1691 				;===============================================================
  1692
  1693 B002				.proc screen
  1694
  1695 B002				.proc print_line		;IN: <A>=lo, <Y>=hi
  1696 B002 85 38			sta p1
  1697 B004 84 39			sty p1+1
  1698 B006 A9 00		with_p1	lda #$00			;IN: p1 = source address
  1699 B008 85 17			sta iccomt
  1700 B00A A0 00		lb00a	ldy #$00
  1701 B00C B1 38			lda (p1),y
  1702 B00E F0 0B			beq lb01b
  1703 B010 C9 9B			cmp #$9b
  1704 B012 D0 0B			bne lb01f
  1705 B014 A2 00			ldx #$00
  1706 B016 A4 16			ldy bufadr+1
  1707 B018 20 28 B1			jsr advance_cursor.lb128
  1708 B01B C6 17		lb01b	dec iccomt
  1709 B01D 30 03			bmi lb022
  1710 B01F 20 F8 B0		lb01f	jsr print_ascii_char
  1711 B022 18			lb022	clc
  1712 B023 A5 38			lda p1
  1713 B025 69 01			adc #$01
  1714 B027 85 38			sta p1
  1715 B029 A5 39			lda p1+1
  1716 B02B 69 00			adc #$00
  1717 B02D 85 39			sta p1+1
  1718 B02F 24 17			bit iccomt
  1719 B031 10 D7			bpl lb00a
  1720 B033 60				rts
  1721 					.endp
  1722
  1723 B034				.proc clear_screen
  1724 = 0018				line = dskfms
  1725 B034 A9 00			lda #$00
  1726 B036 85 18			sta line
  1727 B038 A2 00		loop	ldx #$00
  1728 B03A A4 18			ldy line
  1729 B03C 20 A4 B0			jsr set_cursor
  1730 B03F 20 74 B0			jsr clear_line
  1731 B042 A5 18			lda line
  1732 B044 C9 17			cmp #status_line
  1733 B046 F0 04			beq last_line
  1734 B048 E6 18			inc line
  1735 B04A 10 EC			bpl loop
  1736
  1737 B04C			last_line
  1738 B04C A2 00			ldx #$00
  1739 B04E A0 00			ldy #$00
  1740 B050 20 A4 B0			jsr set_cursor
  1741 B053 60				rts
  1742 					.endp
  1743
  1744 B054				.proc clear_screen2
  1745 = 0018				line = dskfms
  1746
  1747 B054 A9 01			lda #$01
  1748 B056 85 18			sta line
  1749 B058 A2 00		loop	ldx #$00
  1750 B05A A4 18			ldy line
  1751 B05C 20 A4 B0			jsr set_cursor
  1752 B05F 20 74 B0			jsr clear_line
  1753 B062 A5 18			lda line
  1754 B064 C9 16			cmp #$16
  1755 B066 F0 04			beq last_line
  1756 B068 E6 18			inc line
  1757 B06A 10 EC			bpl loop
  1758 B06C			last_line
  1759 B06C A2 00			ldx #$00
  1760 B06E A0 01			ldy #$01
  1761 B070 20 A4 B0			jsr set_cursor
  1762 B073 60				rts
  1763 					.endp
  1764 					
  1765 B074				.proc clear_line		;IN:  bufadr+1 = line
  1766 B074 A2 00			ldx #$00
  1767 B076 A4 16			ldy bufadr+1
  1768 B078 20 A4 B0			jsr set_cursor
  1769 B07B A9 00			lda #$00
  1770 B07D A0 27			ldy #$27
  1771 B07F 91 0E		loop	sta (cursor_ptr),y
  1772 B081 88				dey
  1773 B082 10 FB			bpl loop
  1774 B084 60				rts
  1775 					.endp
  1776
  1777 B085				.proc invert_line		;IN:  bufadr+1 = line
  1778 B085 A2 00			ldx #$00
  1779 B087 A4 16			ldy bufadr+1
  1780 B089 20 A4 B0			jsr set_cursor
  1781 B08C A0 27			ldy #$27
  1782 B08E B1 0E		loop	lda (cursor_ptr),y
  1783 B090 09 80			ora #$80
  1784 B092 91 0E			sta (cursor_ptr),y
  1785 B094 88				dey
  1786 B095 10 F7			bpl loop
  1787 B097 60				rts
  1788 					.endp
  1789
  1790 B098				.proc normalize_inverted_line
  1791 B098 A0 27			ldy #$27
  1792 B09A B1 0E		loop	lda (cursor_ptr),y
  1793 B09C 29 7F			and #$7f
  1794 B09E 91 0E			sta (cursor_ptr),y
  1795 B0A0 88				dey
  1796 B0A1 10 F7			bpl loop
  1797 B0A3 60				rts
  1798 					.endp
  1799
  1800 B0A4				.proc set_cursor
  1801 B0A4 86 15			stx bufadr
  1802 B0A6 84 16			sty bufadr+1
  1803 B0A8 20 EF B0			jsr clear_cursor
  1804 B0AB AD 51 B1			lda dl.lms_adr
  1805 B0AE 85 0E			sta cursor_ptr
  1806 B0B0 AD 52 B1			lda dl.lms_adr+1
  1807 B0B3 85 0F			sta cursor_ptr+1
  1808 B0B5 A4 16			ldy bufadr+1
  1809 B0B7 F0 10			beq lb0c9
  1810 B0B9 18			lb0b9	clc
  1811 B0BA A5 0E			lda cursor_ptr
  1812 B0BC 69 28			adc #screen_width
  1813 B0BE 85 0E			sta cursor_ptr
  1814 B0C0 A5 0F			lda cursor_ptr+1
  1815 B0C2 69 00			adc #$00
  1816 B0C4 85 0F			sta cursor_ptr+1
  1817 B0C6 88				dey
  1818 B0C7 D0 F0			bne lb0b9
  1819 B0C9 18			lb0c9	clc
  1820 B0CA A5 0E			lda cursor_ptr
  1821 B0CC 65 15			adc bufadr
  1822 B0CE 85 0E			sta cursor_ptr
  1823 B0D0 A5 0F			lda cursor_ptr+1
  1824 B0D2 69 00			adc #$00
  1825 B0D4 85 0F			sta cursor_ptr+1
  1826 B0D6 20 E6 B0			jsr print_cursor
  1827 B0D9 60				rts
  1828 					.endp
  1829
  1830 B0DA				.proc set_cursor_x		;Set cursor to column <X> keeping the current line
  1831 B0DA A4 16			ldy bufadr+1
  1832 B0DC 20 A4 B0			jsr set_cursor
  1833 B0DF 60				rts
  1834 					.endp
  1835
  1836 B0E0				.proc set_cursor_y		;Set cursor to line <Y> keeping the current column
  1837 B0E0 A6 15			ldx bufadr
  1838 B0E2 20 A4 B0			jsr set_cursor
  1839 B0E5 60				rts
  1840 					.endp
  1841
  1842 B0E6				.proc print_cursor
  1843 B0E6 A0 00			ldy #$00
  1844 B0E8 B1 0E			lda (cursor_ptr),y
  1845 B0EA 09 80			ora #$80
  1846 B0EC 91 0E			sta (cursor_ptr),y
  1847 B0EE 60				rts
  1848 					.endp
  1849
  1850 B0EF				.proc clear_cursor
  1851 B0EF A0 00			ldy #$00
  1852 B0F1 B1 0E			lda (cursor_ptr),y
  1853 B0F3 29 7F			and #$7f
  1854 B0F5 91 0E			sta (cursor_ptr),y
  1855 B0F7 60				rts
  1856 					.endp
  1857
  1858 B0F8				.proc print_ascii_char		;Print ASCII char, in <A>=ASCII char
  1859 B0F8 48				pha
  1860 B0F9 20 EF B0			jsr clear_cursor
  1861 B0FC 68				pla
  1862 B0FD 20 0B B1			jsr convert_to_atascii
  1863 B100 A0 00			ldy #$00
  1864 B102 91 0E			sta (cursor_ptr),y
  1865 B104 20 1D B1			jsr advance_cursor
  1866 B107 20 E6 B0			jsr print_cursor
  1867 B10A 60				rts
  1868 					
  1869 B10B				.proc convert_to_atascii
  1870 B10B C9 20			cmp #$20
  1871 B10D B0 06			bcs no_control
  1872 B10F 38				sec
  1873 B110 E9 40			sbc #$40
  1874 B112 4C 1C B1			jmp return
  1875 B115			no_control
  1876 B115 C9 5F			cmp #$5f
  1877 B117 B0 03			bcs return
  1878 B119 38				sec
  1879 B11A E9 20			sbc #$20
  1880 B11C 60			return	rts
  1881 					.endp
  1882
  1883 					.endp
  1884
  1885 B11D				.proc advance_cursor
  1886 B11D A4 16			ldy bufadr+1
  1887 B11F A6 15			ldx bufadr
  1888 B121 E8				inx
  1889 B122 E0 28			cpx #screen_width
  1890 B124 D0 09			bne lb12f
  1891 B126 A2 00			ldx #$00
  1892 B128 C8			lb128	iny
  1893 B129 C0 17			cpy #status_line
  1894 B12B 90 02			bcc lb12f
  1895 B12D A0 01			ldy #$01
  1896 B12F 20 A4 B0		lb12f	jsr set_cursor
  1897 B132 60				rts
  1898 					.endp
  1899
  1900 B133				.proc open_editor	;Open #0,12,0,"E:"
  1901
  1902 B133				.enum iocb
  1903 = 0002			iccom	= $02
  1904 = 0004			icbal	= $04
  1905 = 0005			icbah	= $05
  1906 = 000A			icax1	= $0a
  1907 					.ende
  1908
  1909 B133 A9 03			lda #$03
  1910 B135 A2 00			ldx #$00
  1911 B137 9D 42 03			sta iocb0+iocb.iccom,x
  1912 B13A A9 48			lda #<os.lc448	;Contains "E:",$9b
  1913 B13C 9D 44 03			sta iocb0+iocb.icbal,x
  1914 B13F A9 C4			lda #>os.lc448
  1915 B141 9D 45 03			sta iocb0+iocb.icbah,x
  1916 B144 A9 0C			lda #$0c
  1917 B146 9D 4A 03			sta iocb0+iocb.icax1,x
  1918 B149 20 56 E4			jsr ciov
  1919 B14C 60				rts
  1920 					.endp
  1921
  1922 B14D				.local dl
  1923 B14D 70				.byte aempty8
  1924 B14E 70				.byte aempty8
  1925 B14F F0				.byte adli+aempty8
  1926 B150 42				.byte alms+$02
  1927 B151 22 1C		lms_adr	.word sm_ram
  1928 B153 80				.byte adli+aempty1
  1929 B154 02 02 02 02 02 02 + 	.byte $02,$02,$02,$02,$02,$02,$02,$02,$02,$02,$02,$02,$02,$02,$02,$02
  1930 B164 02 02 02 02 02 02		.byte $02,$02,$02,$02,$02,$02
  1931 B16A 80				.byte adli+aempty1
  1932 B16B 02				.byte $02
  1933 B16C 41				.byte $41
  1934 B16D 00 1C		vbl_adr	.word dl_rbam
  1935 					.endl
  1936 					
  1937 					.endp
  1938
  1939 B16F				.local menu_entries
  1940
  1941 B16F 7F			totalchoices	.byte ''
  1942
  1943 B170				.local choices
  1944 B170 3C 20 20 31 3E 20 + 	.byte '<  1> A'
  1945 B177 9B				.byte $9B
  1946 B178 3C 20 20 32 3E 20 + 	.byte '<  2> B'
  1947 B17F 9B				.byte $9B
  1948 B180 3C 20 20 33 3E 20 + 	.byte '<  3> C'
  1949 B187 9B				.byte $9b
  1950 B188 3C 20 20 34 3E 20		.byte '<  4> '
  1951 B18E 9B				.byte $9b
  1952 B18F 3C 20 20 35 3E 20		.byte '<  5> '
  1953 B195 9B				.byte $9b
  1954 B196 3C 20 20 36 3E 20		.byte '<  6> '
  1955 B19C 9B				.byte $9b
  1956 B19D 3C 20 20 37 3E 20		.byte '<  7> '
  1957 B1A3 9B				.byte $9b
  1958 B1A4 3C 20 20 38 3E 20		.byte '<  8> '
  1959 B1AA 9B				.byte $9b
  1960 B1AB 3C 20 20 39 3E 20		.byte '<  9> '
  1961 B1B1 9B				.byte $9b
  1962 B1B2 3C 20 31 30 3E 20		.byte '< 10> '
  1963 B1B8 9B				.byte $9b
  1964 B1B9 3C 20 31 31 3E 20		.byte '< 11> '
  1965 B1BF 9B				.byte $9b
  1966 B1C0 3C 20 31 32 3E 20		.byte '< 12> '
  1967 B1C6 9B				.byte $9b
  1968 B1C7 3C 20 31 33 3E 20		.byte '< 13> '
  1969 B1CD 9B				.byte $9b
  1970 B1CE 3C 20 31 34 3E 20		.byte '< 14> '
  1971 B1D4 9B				.byte $9b
  1972 B1D5 3C 20 31 35 3E 20		.byte '< 15> '
  1973 B1DB 9B				.byte $9b
  1974 B1DC 3C 20 31 36 3E 20		.byte '< 16> '
  1975 B1E2 9B				.byte $9b
  1976 B1E3 3C 20 31 37 3E 20		.byte '< 17> '
  1977 B1E9 9B				.byte $9b
  1978 B1EA 3C 20 31 38 3E 20		.byte '< 18> '
  1979 B1F0 9B				.byte $9b
  1980 B1F1 3C 20 31 39 3E 20		.byte '< 19> '
  1981 B1F7 9B				.byte $9b
  1982 B1F8 3C 20 32 30 3E 20		.byte '< 20> '
  1983 B1FE 9B				.byte $9b
  1984 B1FF 3C 20 32 31 3E 20		.byte '< 21> '
  1985 B205 9B				.byte $9b
  1986 B206 3C 20 32 32 3E 20		.byte '< 22> '
  1987 B20C 9B				.byte $9b
  1988 B20D 3C 20 32 33 3E 20		.byte '< 23> '
  1989 B213 9B				.byte $9b
  1990 B214 3C 20 32 34 3E 20		.byte '< 24> '
  1991 B21A 9B				.byte $9b
  1992 B21B 3C 20 32 35 3E 20		.byte '< 25> '
  1993 B221 9B				.byte $9b
  1994 B222 3C 20 32 36 3E 20		.byte '< 26> '
  1995 B228 9B				.byte $9b
  1996 B229 3C 20 32 37 3E 20		.byte '< 27> '
  1997 B22F 9B				.byte $9b
  1998 B230 3C 20 32 38 3E 20		.byte '< 28> '
  1999 B236 9B				.byte $9b
  2000 B237 3C 20 32 39 3E 20		.byte '< 29> '
  2001 B23D 9B				.byte $9b
  2002 B23E 3C 20 33 30 3E 20		.byte '< 30> '
  2003 B244 9B				.byte $9b
  2004 B245 3C 20 33 31 3E 20		.byte '< 31> '
  2005 B24B 9B				.byte $9b
  2006 B24C 3C 20 33 32 3E 20		.byte '< 32> '
  2007 B252 9B				.byte $9b
  2008 B253 3C 20 33 33 3E 20		.byte '< 33> '
  2009 B259 9B				.byte $9b
  2010 B25A 3C 20 33 34 3E 20		.byte '< 34> '
  2011 B260 9B				.byte $9b
  2012 B261 3C 20 33 35 3E 20		.byte '< 35> '
  2013 B267 9B				.byte $9b
  2014 B268 3C 20 33 36 3E 20		.byte '< 36> '
  2015 B26E 9B				.byte $9b
  2016 B26F 3C 20 33 37 3E 20		.byte '< 37> '
  2017 B275 9B				.byte $9b
  2018 B276 3C 20 33 38 3E 20		.byte '< 38> '
  2019 B27C 9B				.byte $9b
  2020 B27D 3C 20 33 39 3E 20		.byte '< 39> '
  2021 B283 9B				.byte $9b
  2022 B284 3C 20 34 30 3E 20		.byte '< 40> '
  2023 B28A 9B				.byte $9b
  2024 B28B 3C 20 34 31 3E 20		.byte '< 41> '
  2025 B291 9B				.byte $9b
  2026 B292 3C 20 34 32 3E 20		.byte '< 42> '
  2027 B298 9B				.byte $9b
  2028 B299 3C 20 34 33 3E 20		.byte '< 43> '
  2029 B29F 9B				.byte $9b
  2030 B2A0 3C 20 34 34 3E 20		.byte '< 44> '
  2031 B2A6 9B				.byte $9b
  2032 B2A7 3C 20 34 35 3E 20		.byte '< 45> '
  2033 B2AD 9B				.byte $9b
  2034 B2AE 3C 20 34 36 3E 20		.byte '< 46> '
  2035 B2B4 9B				.byte $9b
  2036 B2B5 3C 20 34 37 3E 20		.byte '< 47> '
  2037 B2BB 9B				.byte $9b
  2038 B2BC 3C 20 34 38 3E 20		.byte '< 48> '
  2039 B2C2 9B				.byte $9b
  2040 B2C3 3C 20 34 39 3E 20		.byte '< 49> '
  2041 B2C9 9B				.byte $9b
  2042 B2CA 3C 20 35 30 3E 20		.byte '< 50> '
  2043 B2D0 9B				.byte $9b
  2044 B2D1 3C 20 35 31 3E 20		.byte '< 51> '
  2045 B2D7 9B				.byte $9b
  2046 B2D8 3C 20 35 32 3E 20		.byte '< 52> '
  2047 B2DE 9B				.byte $9b
  2048 B2DF 3C 20 35 33 3E 20		.byte '< 53> '
  2049 B2E5 9B				.byte $9b
  2050 B2E6 3C 20 35 34 3E 20		.byte '< 54> '
  2051 B2EC 9B				.byte $9b
  2052 B2ED 3C 20 35 35 3E 20		.byte '< 55> '
  2053 B2F3 9B				.byte $9b
  2054 B2F4 3C 20 35 36 3E 20		.byte '< 56> '
  2055 B2FA 9B				.byte $9b
  2056 B2FB 3C 20 35 37 3E 20		.byte '< 57> '
  2057 B301 9B				.byte $9b
  2058 B302 3C 20 35 38 3E 20		.byte '< 58> '
  2059 B308 9B				.byte $9b
  2060 B309 3C 20 35 39 3E 20		.byte '< 59> '
  2061 B30F 9B				.byte $9b
  2062 B310 3C 20 36 30 3E 20		.byte '< 60> '
  2063 B316 9B				.byte $9b
  2064 B317 3C 20 36 31 3E 20		.byte '< 61> '
  2065 B31D 9B				.byte $9b
  2066 B31E 3C 20 36 32 3E 20		.byte '< 62> '
  2067 B324 9B				.byte $9b
  2068 B325 3C 20 36 33 3E 20		.byte '< 63> '
  2069 B32B 9B				.byte $9b
  2070 B32C 3C 20 36 34 3E 20		.byte '< 64> '
  2071 B332 9B				.byte $9b
  2072 B333 3C 20 36 35 3E 20		.byte '< 65> '
  2073 B339 9B				.byte $9b
  2074 B33A 3C 20 36 36 3E 20		.byte '< 66> '
  2075 B340 9B				.byte $9b
  2076 B341 3C 20 36 37 3E 20		.byte '< 67> '
  2077 B347 9B				.byte $9b
  2078 B348 3C 20 36 38 3E 20		.byte '< 68> '
  2079 B34E 9B				.byte $9b
  2080 B34F 3C 20 36 39 3E 20		.byte '< 69> '
  2081 B355 9B				.byte $9b
  2082 B356 3C 20 37 30 3E 20		.byte '< 70> '
  2083 B35C 9B				.byte $9b
  2084 B35D 3C 20 37 31 3E 20		.byte '< 71> '
  2085 B363 9B				.byte $9b
  2086 B364 3C 20 37 32 3E 20		.byte '< 72> '
  2087 B36A 9B				.byte $9b
  2088 B36B 3C 20 37 33 3E 20		.byte '< 73> '
  2089 B371 9B				.byte $9b
  2090 B372 3C 20 37 34 3E 20		.byte '< 74> '
  2091 B378 9B				.byte $9b
  2092 B379 3C 20 37 35 3E 20		.byte '< 75> '
  2093 B37F 9B				.byte $9b
  2094 B380 3C 20 37 36 3E 20		.byte '< 76> '
  2095 B386 9B				.byte $9b
  2096 B387 3C 20 37 37 3E 20		.byte '< 77> '
  2097 B38D 9B				.byte $9b
  2098 B38E 3C 20 37 38 3E 20		.byte '< 78> '
  2099 B394 9B				.byte $9b
  2100 B395 3C 20 37 39 3E 20		.byte '< 79> '
  2101 B39B 9B				.byte $9b
  2102 B39C 3C 20 38 30 3E 20		.byte '< 80> '
  2103 B3A2 9B				.byte $9b
  2104 B3A3 3C 20 38 31 3E 20		.byte '< 81> '
  2105 B3A9 9B				.byte $9b
  2106 B3AA 3C 20 38 32 3E 20		.byte '< 82> '
  2107 B3B0 9B				.byte $9b
  2108 B3B1 3C 20 38 33 3E 20		.byte '< 83> '
  2109 B3B7 9B				.byte $9b
  2110 B3B8 3C 20 38 34 3E 20		.byte '< 84> '
  2111 B3BE 9B				.byte $9b
  2112 B3BF 3C 20 38 35 3E 20		.byte '< 85> '
  2113 B3C5 9B				.byte $9b
  2114 B3C6 3C 20 38 36 3E 20		.byte '< 86> '
  2115 B3CC 9B				.byte $9b
  2116 B3CD 3C 20 38 37 3E 20		.byte '< 87> '
  2117 B3D3 9B				.byte $9b
  2118 B3D4 3C 20 38 38 3E 20		.byte '< 88> '
  2119 B3DA 9B				.byte $9b
  2120 B3DB 3C 20 38 39 3E 20		.byte '< 89> '
  2121 B3E1 9B				.byte $9b
  2122 B3E2 3C 20 39 30 3E 20		.byte '< 90> '
  2123 B3E8 9B				.byte $9b
  2124 B3E9 3C 20 39 31 3E 20		.byte '< 91> '
  2125 B3EF 9B				.byte $9b
  2126 B3F0 3C 20 39 32 3E 20		.byte '< 92> '
  2127 B3F6 9B				.byte $9b
  2128 B3F7 3C 20 39 33 3E 20		.byte '< 93> '
  2129 B3FD 9B				.byte $9b
  2130 B3FE 3C 20 39 34 3E 20		.byte '< 94> '
  2131 B404 9B				.byte $9b
  2132 B405 3C 20 39 35 3E 20		.byte '< 95> '
  2133 B40B 9B				.byte $9b
  2134 B40C 3C 20 39 36 3E 20		.byte '< 96> '
  2135 B412 9B				.byte $9b
  2136 B413 3C 20 39 37 3E 20		.byte '< 97> '
  2137 B419 9B				.byte $9b
  2138 B41A 3C 20 39 38 3E 20		.byte '< 98> '
  2139 B420 9B				.byte $9b
  2140 B421 3C 20 39 39 3E 20		.byte '< 99> '
  2141 B427 9B				.byte $9b
  2142 B428 3C 31 30 30 3E 20		.byte '<100> '
  2143 B42E 9B				.byte $9b
  2144 B42F 3C 31 30 31 3E 20		.byte '<101> '
  2145 B435 9B				.byte $9b
  2146 B436 3C 31 30 32 3E 20		.byte '<102> '
  2147 B43C 9B				.byte $9b
  2148 B43D 3C 31 30 33 3E 20		.byte '<103> '
  2149 B443 9B				.byte $9b
  2150 B444 3C 31 30 34 3E 20		.byte '<104> '
  2151 B44A 9B				.byte $9b
  2152 B44B 3C 31 30 35 3E 20		.byte '<105> '
  2153 B451 9B				.byte $9b
  2154 B452 3C 31 30 36 3E 20		.byte '<106> '
  2155 B458 9B				.byte $9b
  2156 B459 3C 31 30 37 3E 20		.byte '<107> '
  2157 B45F 9B				.byte $9b
  2158 B460 3C 31 30 38 3E 20		.byte '<108> '
  2159 B466 9B				.byte $9b
  2160 B467 3C 31 30 39 3E 20		.byte '<109> '
  2161 B46D 9B				.byte $9b
  2162 B46E 3C 31 31 30 3E 20		.byte '<110> '
  2163 B474 9B				.byte $9b
  2164 B475 3C 31 31 31 3E 20		.byte '<111> '
  2165 B47B 9B				.byte $9b
  2166 B47C 3C 31 31 32 3E 20		.byte '<112> '
  2167 B482 9B				.byte $9b
  2168 B483 3C 31 31 33 3E 20		.byte '<113> '
  2169 B489 9B				.byte $9b
  2170 B48A 3C 31 31 34 3E 20		.byte '<114> '
  2171 B490 9B				.byte $9b
  2172 B491 3C 31 31 35 3E 20		.byte '<115> '
  2173 B497 9B				.byte $9b
  2174 B498 3C 31 31 36 3E 20		.byte '<116> '
  2175 B49E 9B				.byte $9b
  2176 B49F 3C 31 31 37 3E 20		.byte '<117> '
  2177 B4A5 9B				.byte $9b
  2178 B4A6 3C 31 31 38 3E 20		.byte '<118> '
  2179 B4AC 9B				.byte $9b
  2180 B4AD 3C 31 31 39 3E 20		.byte '<119> '
  2181 B4B3 9B				.byte $9b
  2182 B4B4 3C 31 32 30 3E 20		.byte '<120> '
  2183 B4BA 9B				.byte $9b
  2184 B4BB 3C 31 32 31 3E 20		.byte '<121> '
  2185 B4C1 9B				.byte $9b
  2186 B4C2 3C 31 32 32 3E 20		.byte '<122> '
  2187 B4C8 9B				.byte $9b
  2188 B4C9 3C 31 32 33 3E 20		.byte '<123> '
  2189 B4CF 9B				.byte $9b
  2190 B4D0 3C 31 32 34 3E 20		.byte '<124> '
  2191 B4D6 9B				.byte $9b
  2192 B4D7 3C 31 32 35 3E 20		.byte '<125> '
  2193 B4DD 9B				.byte $9b
  2194 B4DE 3C 31 32 36 3E 20		.byte '<126> '
  2195 B4E4 9B				.byte $9b
  2196 B4E5 3C 31 32 37 3E 20 + 	.byte '<127> 127 Last Entry'
  2197 B4F9 9B				.byte $9b
  2198 					.endl
  2199
  2200 B4FA FF FF FF FF FF FF + 	.byte $ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff
  2201 B509 FF FF FF FF FF FF + 	.byte $ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff
  2202 B519 FF FF FF FF FF FF + 	.byte $ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff
  2203 B529 FF FF FF FF FF FF + 	.byte $ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff
  2204 B539 FF FF FF FF FF FF + 	.byte $ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff
  2205 B549 FF FF FF FF FF FF + 	.byte $ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff
  2206 B559 FF FF FF FF FF FF + 	.byte $ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff
  2207 B569 FF FF FF FF FF FF + 	.byte $ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff
  2208 B579 FF FF FF FF FF FF + 	.byte $ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff
  2209 B589 FF FF FF FF FF FF + 	.byte $ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff
  2210 B599 FF FF FF FF FF FF + 	.byte $ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff
  2211 B5A9 FF FF FF FF FF FF + 	.byte $ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff
  2212 B5B9 FF FF FF FF FF FF + 	.byte $ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff
  2213 B5C9 FF FF FF FF FF FF + 	.byte $ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff
  2214 B5D9 FF FF FF FF FF FF + 	.byte $ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff
  2215 B5E9 FF FF FF FF FF FF + 	.byte $ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff
  2216 B5F9 FF FF FF FF FF FF + 	.byte $ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff
  2217 B609 FF FF FF FF FF FF + 	.byte $ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff
  2218 B619 FF FF FF FF FF FF + 	.byte $ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff
  2219 B629 FF FF FF FF FF FF + 	.byte $ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff
  2220 B639 FF FF FF FF FF FF + 	.byte $ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff
  2221 B649 FF FF FF FF FF FF + 	.byte $ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff
  2222 B659 FF FF FF FF FF FF + 	.byte $ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff
  2223 B669 FF FF FF FF FF FF + 	.byte $ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff
  2224 B679 FF FF FF FF FF FF + 	.byte $ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff
  2225 B689 FF FF FF FF FF FF + 	.byte $ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff
  2226 B699 FF FF FF FF FF FF + 	.byte $ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff
  2227 B6A9 FF FF FF FF FF FF + 	.byte $ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff
  2228 B6B9 FF FF FF FF FF FF + 	.byte $ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff
  2229 B6C9 FF FF FF FF FF FF + 	.byte $ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff
  2230 B6D9 FF FF FF FF FF FF + 	.byte $ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff
  2231 B6E9 FF FF FF FF FF FF + 	.byte $ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff
  2232 B6F9 FF FF FF FF FF FF + 	.byte $ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff
  2233 B709 FF FF FF FF FF FF + 	.byte $ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff
  2234 B719 FF FF FF FF FF FF + 	.byte $ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff
  2235 B729 FF FF FF FF FF FF + 	.byte $ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff
  2236 B739 FF FF FF FF FF FF + 	.byte $ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff
  2237 B749 FF FF FF FF FF FF + 	.byte $ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff
  2238 B759 FF FF FF FF FF FF + 	.byte $ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff
  2239 B769 FF FF FF FF FF FF + 	.byte $ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff
  2240 B779 FF FF FF FF FF FF + 	.byte $ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff
  2241 B789 FF FF FF FF FF FF + 	.byte $ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff
  2242 B799 FF FF FF FF FF FF + 	.byte $ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff
  2243 B7A9 FF FF FF FF FF FF + 	.byte $ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff
  2244 B7B9 FF FF FF FF FF FF + 	.byte $ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff
  2245 B7C9 FF FF FF FF FF FF + 	.byte $ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff
  2246 B7D9 FF FF FF FF FF FF + 	.byte $ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff
  2247 B7E9 FF FF FF FF FF FF + 	.byte $ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff
  2248 B7F9 FF FF FF FF FF FF + 	.byte $ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff
  2249 B809 FF FF FF FF FF FF + 	.byte $ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff
  2250 B819 FF FF FF FF FF FF + 	.byte $ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff
  2251 B829 FF FF FF FF FF FF + 	.byte $ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff
  2252 B839 FF FF FF FF FF FF + 	.byte $ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff
  2253 B849 FF FF FF FF FF FF + 	.byte $ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff
  2254 B859 FF FF FF FF FF FF + 	.byte $ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff
  2255 B869 FF FF FF FF FF FF + 	.byte $ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff
  2256 B879 FF FF FF FF FF FF + 	.byte $ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff
  2257 B889 FF FF FF FF FF FF + 	.byte $ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff
  2258 B899 FF FF FF FF FF FF + 	.byte $ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff
  2259 B8A9 FF FF FF FF FF FF + 	.byte $ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff
  2260 B8B9 FF FF FF FF FF FF + 	.byte $ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff
  2261 B8C9 FF FF FF FF FF FF + 	.byte $ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff
  2262 B8D9 FF FF FF FF FF FF + 	.byte $ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff
  2263 B8E9 FF FF FF FF FF FF + 	.byte $ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff
  2264 B8F9 FF FF FF FF FF FF + 	.byte $ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff
  2265 B909 FF FF FF FF FF FF + 	.byte $ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff
  2266 B919 FF FF FF FF FF FF + 	.byte $ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff
  2267 B929 FF FF FF FF FF FF + 	.byte $ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff
  2268 B939 FF FF FF FF FF FF		.byte $ff,$ff,$ff,$ff,$ff,$ff
  2269
  2270 B93F				.local bindata
  2271 B93F FF FF FF FF FF FF + 	.byte $ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff
  2272 B949 FF FF FF FF FF FF + 	.byte $ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff
  2273 B959 FF FF FF FF FF FF + 	.byte $ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff
  2274 B969 FF FF FF FF FF FF + 	.byte $ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff
  2275 B979 FF FF FF FF FF FF + 	.byte $ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff
  2276 B989 FF FF FF FF FF FF + 	.byte $ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff
  2277 B999 FF FF FF FF FF FF + 	.byte $ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff
  2278 B9A9 FF FF FF FF FF FF + 	.byte $ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff
  2279 B9B9 FF FF FF FF FF FF + 	.byte $ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff
  2280 B9C9 FF FF FF FF FF FF + 	.byte $ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff
  2281 B9D9 FF FF FF FF FF FF + 	.byte $ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff
  2282 B9E9 FF FF FF FF FF FF + 	.byte $ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff
  2283
  2284 B9F9 FF FF FF FF FF FF + 	.byte $ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff
  2285 BA09 FF FF FF FF FF FF + 	.byte $ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff
  2286 BA19 FF FF FF FF FF FF + 	.byte $ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff
  2287 BA29 FF FF FF FF FF FF + 	.byte $ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff
  2288 BA39 FF FF FF FF FF FF + 	.byte $ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff
  2289 BA49 FF FF FF FF FF FF + 	.byte $ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff
  2290
  2291 BA59 FF FF FF FF FF FF + 	.byte $ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff
  2292 BA69 FF FF FF FF FF FF + 	.byte $ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff
  2293 BA79 FF FF FF FF FF FF + 	.byte $ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff
  2294 BA89 FF FF FF FF FF FF + 	.byte $ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff
  2295 BA99 FF FF FF FF FF FF + 	.byte $ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff
  2296 BAA9 FF FF FF FF FF FF + 	.byte $ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff
  2297 BAB9 FF FF FF FF FF FF + 	.byte $ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff
  2298 BAC9 FF FF FF FF FF FF + 	.byte $ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff
  2299 BAD9 FF FF FF FF FF FF + 	.byte $ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff
  2300 BAE9 FF FF FF FF FF FF + 	.byte $ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff
  2301 BAF9 FF FF FF FF FF FF + 	.byte $ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff
  2302 BB09 FF FF FF FF FF FF + 	.byte $ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff
  2303 BB19 FF FF FF FF FF FF + 	.byte $ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff
  2304 BB29 FF FF FF FF FF FF + 	.byte $ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff
  2305 BB39 FF FF FF FF FF FF + 	.byte $ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff
  2306 BB49 FF FF FF FF FF FF + 	.byte $ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff
  2307 BB59 FF FF FF FF FF FF + 	.byte $ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff
  2308 BB69 FF FF FF FF FF FF + 	.byte $ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff
  2309 BB79 FF FF FF FF FF FF + 	.byte $ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff
  2310 BB89 FF FF FF FF FF FF + 	.byte $ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff
  2311 BB99 FF FF FF FF FF FF + 	.byte $ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff
  2312 BBA9 FF FF FF FF FF FF + 	.byte $ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff
  2313 BBB9 FF FF FF FF FF FF + 	.byte $ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff
  2314 BBC9 FF FF FF FF FF FF + 	.byte $ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff
  2315 BBD9 FF FF FF FF FF FF + 	.byte $ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff
  2316 BBE9 FF FF FF FF FF FF + 	.byte $ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff
  2317 BBF9 FF FF FF FF FF FF + 	.byte $ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff
  2318 BC09 FF FF FF FF FF FF + 	.byte $ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff
  2319 BC19 FF FF FF FF FF FF + 	.byte $ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff
  2320 BC29 FF FF FF FF FF FF + 	.byte $ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff
  2321 BC39 FF FF FF FF FF FF + 	.byte $ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff
  2322 BC49 FF FF FF FF FF FF + 	.byte $ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff
  2323 BC59 FF FF FF FF FF FF + 	.byte $ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff
  2324 BC69 FF FF FF FF FF FF + 	.byte $ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff
  2325 BC79 FF FF FF FF FF FF + 	.byte $ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff
  2326 BC89 FF FF FF FF FF FF + 	.byte $ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff
  2327 BC99 FF FF FF FF FF FF + 	.byte $ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff
  2328 BCA9 FF FF FF FF FF FF + 	.byte $ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff
  2329 BCB9 FF FF FF FF FF FF + 	.byte $ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff
  2330 BCC9 FF FF FF FF FF FF + 	.byte $ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff
  2331 BCD9 FF FF FF FF FF FF + 	.byte $ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff
  2332 BCE9 FF FF FF FF FF FF + 	.byte $ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff
  2333 BCF9 FF FF FF FF FF FF + 	.byte $ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff
  2334 BD09 FF FF FF FF FF FF + 	.byte $ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff
  2335 BD19 FF FF FF FF FF FF + 	.byte $ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff
  2336 BD29 FF FF FF FF FF FF + 	.byte $ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff
  2337 BD39 FF FF FF FF FF FF		.byte $ff,$ff,$ff,$ff,$ff,$ff
  2338 					.endl
  2339
  2340 BD3F				.local menumap
  2341 BD3F FF FF FF FF FF FF + 	.byte $ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff
  2342 BD4F FF FF FF FF FF FF + 	.byte $ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff
  2343 BD5F FF FF FF FF FF FF + 	.byte $ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff
  2344 BD6F FF FF FF FF FF FF + 	.byte $ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff
  2345 BD7F FF FF FF FF FF FF + 	.byte $ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff
  2346 BD8F FF FF FF FF FF FF + 	.byte $ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff
  2347 BD9F FF FF FF FF FF FF + 	.byte $ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff
  2348 BDAF FF FF FF FF FF FF + 	.byte $ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff
  2349 					.endl
  2350
  2351 					.endl		;End of menu_entries
  2352
  2353 BDBF			unpacker_rom
  2354 BDBF				icl "MaxflashMenu-Unpacker.asm"
Source: C:\jac\system\Java\Programming\Workspaces\Productions\com.wudsn.productions.atari800.thecartstudio\asm\atarimax\new\MaxflashMenu-Unpacker.asm
     1 				;	@com.wudsn.ide.asm.mainsourcefile=MaxflashMenu.asm
     2 BDBF				.proc unpacker, $100
     3 				; 
     4 				; PAGE 0
     5 				; 
     6 = 0000			zp_00		= $00
     7 = 0001			ngflag		= $01
     8 = 0002			src_ptr		= $02
     9 = 0004			dest_ptr	= $04
    10 = 0006			bank_number	= $06
    11 = 0007			cmcmd		= $07
    12 = 0008			byte_counter_hi	= $08
    13 = 0009			byte_counter_lo	= $09
    14 = 000C			dosini		= $0c
    15
    16 0100				.proc load_segment
    17 0100 C6 07			dec cmcmd
    18 0102 20 9D 01			jsr get_next_byte
    19 0105 85 04			sta dest_ptr
    20 0107 20 9D 01			jsr get_next_byte
    21 010A 85 05			sta dest_ptr+1
    22 010C 20 9D 01			jsr get_next_byte
    23 010F 85 09			sta byte_counter_lo
    24 0111 20 9D 01			jsr get_next_byte
    25 0114 85 08			sta byte_counter_hi
    26 0116 E6 07			inc cmcmd
    27
    28 0118 A9 00			lda #$00
    29 011A 05 04			ora dest_ptr
    30 011C 05 05			ora dest_ptr+1
    31 011E 05 09			ora byte_counter_lo
    32 0120 05 08			ora byte_counter_hi
    33 0122 F0 20			beq segment_complete
    34
    35 0124 A9 00			lda #$00
    36 0126 8D E2 02			sta initad
    37 0129 8D E3 02			sta initad+1
    38 012C 20 62 01		loop	jsr copy_next_page
    39 012F A5 09			lda byte_counter_lo
    40 0131 05 08			ora byte_counter_hi
    41 0133 D0 F7			bne loop
    42
    43 0135 AD E2 02			lda initad
    44 0138 0D E3 02			ora initad+1
    45 013B F0 03			beq no_initadr
    46 013D 20 5F 01			jsr jump_initadr
    47 0140			no_initadr
    48 0140 D0 BE			bne load_segment
    49 0142 F0 BC			beq load_segment
    50 					.endp
    51
    52 0144				.proc segment_complete
    53 0144 24 00			bit zp_00			;Use warmstart or runad?
    54 0146 50 14			bvc jump_runadr
    55 0148 AD E0 02			lda runad
    56 014B 8D 0C 00			sta.w dosini
    57 014E AD E1 02			lda runad+1
    58 0151 8D 0D 00			sta.w dosini+1
    59 0154 A9 01			lda #$01
    60 0156 8D 09 00			sta.w byte_counter_lo
    61 0159 4C 74 E4			jmp warmsv
    62 					.endp
    63
    64 015C				.proc jump_runadr
    65 015C 6C E0 02			jmp (runad)
    66 					.endp
    67
    68 015F				.proc jump_initadr
    69 015F 6C E2 02			jmp (initad)
    70 					.endp
    71
    72
    73 0162				.proc copy_next_page
    74 0162 A5 05			lda dest_ptr+1
    75 0164 C9 9F			cmp #>$9fff
    76 0166 B0 20			bcs copy_next_byte
    77
    78 0168 A5 03			lda src_ptr+1
    79 016A C9 BF			cmp #>$bfff
    80 016C B0 1A			bcs copy_next_byte
    81
    82 016E A5 08			lda byte_counter_hi
    83 0170 F0 16			beq copy_next_byte
    84
    85 0172 20 D9 01			jsr activate_bank
    86 0175 A0 00			ldy #$00
    87 0177 B1 02		loop	lda (src_ptr),y
    88 0179 91 04			sta (dest_ptr),y
    89 017B C8				iny
    90 017C D0 F9			bne loop
    91 017E E6 03			inc src_ptr+1
    92 0180 E6 05			inc dest_ptr+1
    93 0182 C6 08			dec byte_counter_hi
    94 0184 20 E1 01			jsr deactivate_bank
    95 0187 60				rts
    96 					.endp
    97
    98 0188				.proc copy_next_byte
    99 0188 20 9D 01			jsr get_next_byte
   100 018B A0 00			ldy #$00
   101 018D 91 04			sta (dest_ptr),y
   102 018F 18				clc
   103 0190 A5 04			lda dest_ptr
   104 0192 69 01			adc #$01
   105 0194 85 04			sta dest_ptr
   106 0196 A5 05			lda dest_ptr+1
   107 0198 69 00			adc #$00
   108 019A 85 05			sta dest_ptr+1
   109 019C 60				rts
   110 					.endp
   111
   112 019D				.proc get_next_byte
   113 019D 20 D9 01			jsr activate_bank
   114 01A0 A0 00			ldy #$00
   115 01A2 B1 02			lda (src_ptr),y
   116 01A4 48				pha
   117
   118 01A5 18				clc
   119 01A6 A5 02			lda src_ptr
   120 01A8 69 01			adc #$01
   121 01AA 85 02			sta src_ptr
   122 01AC A5 03			lda src_ptr+1
   123 01AE 69 00			adc #$00
   124 01B0 85 03			sta src_ptr+1
   125
   126 01B2 C9 C0			cmp #>lc000
   127 01B4 90 06			bcc not_end_of_bank
   128 01B6 E6 06			inc bank_number
   129 01B8 A9 A0			lda #>la000
   130 01BA 85 03			sta src_ptr+1
   131 01BC			not_end_of_bank
   132 01BC 24 07			bit cmcmd
   133 01BE 30 0D			bmi skip
   134 01C0 38				sec
   135 01C1 A5 09			lda byte_counter_lo
   136 01C3 E9 01			sbc #$01
   137 01C5 85 09			sta byte_counter_lo
   138 01C7 A5 08			lda byte_counter_hi
   139 01C9 E9 00			sbc #$00
   140 01CB 85 08			sta byte_counter_hi
   141 01CD 20 E1 01		skip	jsr deactivate_bank
   142
   143 01D0 68				pla
   144 01D1 24 00			bit zp_00
   145 01D3 10 03			bpl return
   146 01D5 8D 1A D0			sta colbk
   147 01D8 60			return	rts
   148 					.endp
   149 					
   150 01D9				.proc activate_bank	;IN: <bank_number>=bank number
   151 01D9 A6 06			ldx bank_number
   152 01DB E6 42			inc critic
   153 01DD 9D 00 D5			sta ld500,x
   154 01E0 60				rts
   155 					.endp
   156
   157 01E1				.proc deactivate_bank
   158 01E1 A6 01			ldx ngflag
   159 01E3 9D 00 D5			sta ld500,x
   160 01E6 AD 13 D0			lda trig3
   161 01E9 8D FA 03			sta gintlk
   162 01EC C6 42			dec critic
   163 01EE 60				rts
   164 					.endp
   165
   166 					.endp		;End of unpacker
  2355
  2356 BEAE 00 00 00 00 00 00 + 	.byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
  2357 BEBE FF				.byte $ff
  2358 BEBF 01 06 0B 10 15 17 + lbebf	.byte $01,$06,$0b,$10,$15,$17,$1b,$1d,$1f,$21,$30,$32,$45,$63,$69
  2359 BECE 6F 78 7A 7F 81 83 + 	.byte $6f,$78,$7a,$7f,$81,$83,$8e,$91,$95,$97,$9b,$a3,$a7,$ab,$ad,$b1
  2360 BEDE B7 BB BD C2 C6 C8 + 	.byte $b7,$bb,$bd,$c2,$c6,$c8,$cc,$d2,$da,$e2,$00
  2361 BEE9 04 09 0E 13 2E 3F + lbee9	.byte $04,$09,$0e,$13,$2e,$3f,$74,$86,$8a,$9f,$cf,0
  2362 BEF5 3E 20 20 20 41 74 + title	.byte '>   Atarimax Maxflash MultiCart Menu   <',0
  2363 BF1E 3E 20 20 55 73 65 + footer	.byte '>  Use Keyboard or Joystick to Select  <',0
  2364 BF47			signature
  2365 BF47 4D 61 78 66 6C 61 + 	.byte 'Maxflash Menu Software, Copyright 2009 Steven J Tucker',0
  2366
  2367 BF7E 00 00 00 00 00 00 + 	.byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
  2368 BF8D 00 00 00 00 00 00 + 	.byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
  2369 BF9D 00 00 00 00 00 00 + 	.byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
  2370 BFAD 00 00 00 00 00 00 + 	.byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
  2371 BFBD 00 00 00 00 00 00 + 	.byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
  2372 BFCD 00 00 00 00 00 00 + 	.byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
  2373 BFDD 00 00 00 00 00 00 + 	.byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
  2374 BFED 00 00 00 00 00 00 + 	.byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00
  2375
  2376 BFF7 4C 13 A4			jmp start
  2377
  2378 BFFA 13 A4			.word start
  2379 BFFC 00 01			.byte $00,$01
  2380 BFFE 13 A4			.word start
  2381 				  
